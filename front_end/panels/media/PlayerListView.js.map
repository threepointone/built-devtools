{"version":3,"file":"PlayerListView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/PlayerListView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,oBAAoB,MAAM,yBAAyB,CAAC;AAQ3D,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,UAAU,EAAE,aAAa;IACzB;;MAEE;IACF,aAAa,EAAE,iBAAiB;IAChC;;MAEE;IACF,cAAc,EAAE,kBAAkB;IAClC;;MAEE;IACF,OAAO,EAAE,SAAS;CACnB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,EAAE,SAAS,CAAC,CAAC;AACtF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAatE,MAAM,OAAO,sBAAuB,SAAQ,EAAE,CAAC,WAAW,CAAC,WAAW;IACpE,YAAY,CAAU;IACL,YAAY,CAAe;IAC3B,gBAAgB,CAAW;IAE5C,YAAY,YAA0B,EAAE,gBAA0B,EAAE,QAAgB;QAClF,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,0BAA0B,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAChE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/G,CAAC;IAED,QAAQ,CAAC,eAAyB;QAChC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,qBAAqB,CAAC,QAAgB,EAAE,KAAY;QAC1D,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,WAAW,CAAC,aAAa,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC/G,WAAW,CAAC,aAAa,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QAClH,WAAW,CAAC,aAAa,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QACnH,WAAW,CAAC,IAAI,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,UAAU,CAAC,QAAgB;QACjC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAEO,UAAU,CAAC,QAAgB;QACjC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEO,UAAU,CAAC,QAAgB;QACjC,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;IAC9D,CAAC;CACF;AAED,MAAM,OAAO,cAAe,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IAC/B,cAAc,CAAsC;IACpD,aAAa,CAAW;IACxB,WAAW,CAAqC;IAChD,UAAU,CAA6B;IAExD,YAAY,aAAuB;QACjC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;QAEhC,2DAA2D;QAC3D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,uCAAuC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAE1D,8BAA8B;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACvE,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAA+B,CAAC,CAAC;QAC7F,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEO,cAAc,CAAC,KAAa;QAClC,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAChE,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACrE,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAClC,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC1C,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,mBAAmB,CAAC,QAAgB;QAClC,MAAM,YAAY,GAAG,EAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAC,CAAC;QACnH,MAAM,aAAa,GAAG,IAAI,sBAAsB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC7F,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAC7C,CAAC;IAED,0BAA0B,CAAC,QAAgB,EAAE,QAAgB,EAAE,uBAAgC;QAC7F,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACrC,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACvD,IAAI,YAAY,IAAI,CAAC,CAAC,uBAAuB,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;gBAC3E,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC;gBAC9B,YAAY,CAAC,YAAY,GAAG,uBAAuB,CAAC;aACrD;SACF;IACH,CAAC;IAED,yBAAyB,CAAC,QAAgB,EAAE,QAAgB;QAC1D,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACrC,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACvD,IAAI,CAAC,YAAY,EAAE;gBACjB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;aAC5D;YACD,YAAY,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;SAC/E;IACH,CAAC;IAED,UAAU,CAAC,QAAgB,EAAE,QAAuC;QAClE,sEAAsE;QACtE,kEAAkE;QAClE,IAAI,QAAQ,CAAC,IAAI,mCAAkC,IAAI,QAAQ,CAAC,KAAK,EAAE;YACrE,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAe,EAAE,KAAK,CAAC,CAAC;SAC5E;QAED,0BAA0B;QAC1B,IAAI,QAAQ,CAAC,IAAI,+BAAgC,EAAE;YACjD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;SACnE;IACH,CAAC;IAED,OAAO,CAAC,SAAiB,EAAE,MAAkC;QAC3D,8DAA8D;IAChE,CAAC;IAED,SAAS,CAAC,SAAiB,EAAE,QAAsC;QACjE,wEAAwE;IAC1E,CAAC;IAED,OAAO,CAAC,QAAgB,EAAE,KAAkB;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;QAChD,IAAI,SAAS,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC;SACtE;aAAM,IAAI,SAAS,KAAK,QAAQ,EAAE;YACjC,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;SACvE;aAAM,IAAI,SAAS,KAAK,0BAA0B,EAAE;YACnD,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,iCAAiC,CAAC,CAAC;SAC7E;IACH,CAAC;IACD,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC5D,CAAC;CACF","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport playerListViewStyles from './playerListView.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {MainView, TriggerDispatcher} from './MainView.js';\nimport type {PlayerEvent} from './MediaModel.js';\nimport {PlayerPropertyKeys} from './PlayerPropertiesView.js';\n\nconst UIStrings = {\n  /**\n  *@description A right-click context menu entry which when clicked causes the menu entry for that player to be removed.\n  */\n  hidePlayer: 'Hide player',\n  /**\n  *@description A right-click context menu entry which should keep the element selected, while hiding all other entries.\n  */\n  hideAllOthers: 'Hide all others',\n  /**\n  *@description Context menu entry which downloads the json dump when clicked\n  */\n  savePlayerInfo: 'Save player info',\n  /**\n  *@description Side-panel entry title text for the players section.\n  */\n  players: 'Players',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/media/PlayerListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface PlayerStatus {\n  playerTitle: string;\n  playerID: string;\n  exists: boolean;\n  playing: boolean;\n  titleEdited: boolean;\n}\nexport interface PlayerStatusMapElement {\n  playerStatus: PlayerStatus;\n  playerTitleElement: HTMLElement|null;\n}\n\nexport class PlayerEntryTreeElement extends UI.TreeOutline.TreeElement {\n  titleFromUrl: boolean;\n  private readonly playerStatus: PlayerStatus;\n  private readonly displayContainer: MainView;\n\n  constructor(playerStatus: PlayerStatus, displayContainer: MainView, playerID: string) {\n    super(playerStatus.playerTitle, false);\n    this.titleFromUrl = true;\n    this.playerStatus = playerStatus;\n    this.displayContainer = displayContainer;\n    this.setLeadingIcons([UI.Icon.Icon.create('largeicon-play-animation', 'media-player')]);\n    this.listItemElement.classList.add('player-entry-tree-element');\n    this.listItemElement.addEventListener('contextmenu', this.rightClickContextMenu.bind(this, playerID), false);\n  }\n\n  onselect(_selectedByUser?: boolean): boolean {\n    this.displayContainer.renderMainPanel(this.playerStatus.playerID);\n    return true;\n  }\n\n  private rightClickContextMenu(playerID: string, event: Event): boolean {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.hidePlayer), this.hidePlayer.bind(this, playerID));\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.hideAllOthers), this.hideOthers.bind(this, playerID));\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.savePlayerInfo), this.savePlayer.bind(this, playerID));\n    contextMenu.show();\n    return true;\n  }\n\n  private hidePlayer(playerID: string): void {\n    this.displayContainer.markPlayerForDeletion(playerID);\n  }\n\n  private savePlayer(playerID: string): void {\n    this.displayContainer.exportPlayerData(playerID);\n  }\n\n  private hideOthers(playerID: string): void {\n    this.displayContainer.markOtherPlayersForDeletion(playerID);\n  }\n}\n\nexport class PlayerListView extends UI.Widget.VBox implements TriggerDispatcher {\n  private readonly playerStatuses: Map<string, PlayerEntryTreeElement>;\n  private readonly mainContainer: MainView;\n  private readonly sidebarTree: UI.TreeOutline.TreeOutlineInShadow;\n  private readonly playerList: UI.TreeOutline.TreeElement;\n\n  constructor(mainContainer: MainView) {\n    super(true);\n\n    this.playerStatuses = new Map();\n\n    // Container where new panels can be added based on clicks.\n    this.mainContainer = mainContainer;\n\n    // The parent tree for storing sections\n    this.sidebarTree = new UI.TreeOutline.TreeOutlineInShadow();\n    this.contentElement.appendChild(this.sidebarTree.element);\n\n    // Players active in this tab.\n    this.playerList = this.addListSection(i18nString(UIStrings.players));\n    this.playerList.listItemElement.classList.add('player-entry-header');\n  }\n\n  deletePlayer(playerID: string): void {\n    this.playerList.removeChild(this.playerStatuses.get(playerID) as UI.TreeOutline.TreeElement);\n    this.playerStatuses.delete(playerID);\n  }\n\n  private addListSection(title: string): UI.TreeOutline.TreeElement {\n    const treeElement = new UI.TreeOutline.TreeElement(title, true);\n    treeElement.listItemElement.classList.add('storage-group-list-item');\n    treeElement.setCollapsible(false);\n    treeElement.selectable = false;\n    this.sidebarTree.appendChild(treeElement);\n    return treeElement;\n  }\n\n  addMediaElementItem(playerID: string): void {\n    const playerStatus = {playerTitle: playerID, playerID: playerID, exists: true, playing: false, titleEdited: false};\n    const playerElement = new PlayerEntryTreeElement(playerStatus, this.mainContainer, playerID);\n    this.playerStatuses.set(playerID, playerElement);\n    this.playerList.appendChild(playerElement);\n  }\n\n  setMediaElementPlayerTitle(playerID: string, newTitle: string, isTitleExtractedFromUrl: boolean): void {\n    if (this.playerStatuses.has(playerID)) {\n      const sidebarEntry = this.playerStatuses.get(playerID);\n      if (sidebarEntry && (!isTitleExtractedFromUrl || sidebarEntry.titleFromUrl)) {\n        sidebarEntry.title = newTitle;\n        sidebarEntry.titleFromUrl = isTitleExtractedFromUrl;\n      }\n    }\n  }\n\n  setMediaElementPlayerIcon(playerID: string, iconName: string): void {\n    if (this.playerStatuses.has(playerID)) {\n      const sidebarEntry = this.playerStatuses.get(playerID);\n      if (!sidebarEntry) {\n        throw new Error('sidebarEntry is expected to not be null');\n      }\n      sidebarEntry.setLeadingIcons([UI.Icon.Icon.create(iconName, 'media-player')]);\n    }\n  }\n\n  onProperty(playerID: string, property: Protocol.Media.PlayerProperty): void {\n    // Sometimes the title will be an empty string, since this is provided\n    // by the website. We don't want to swap title to an empty string.\n    if (property.name === PlayerPropertyKeys.FrameTitle && property.value) {\n      this.setMediaElementPlayerTitle(playerID, property.value as string, false);\n    }\n\n    // Url always has a value.\n    if (property.name === PlayerPropertyKeys.FrameUrl) {\n      const urlPathComponent = property.value.substring(property.value.lastIndexOf('/') + 1);\n      this.setMediaElementPlayerTitle(playerID, urlPathComponent, true);\n    }\n  }\n\n  onError(_playerID: string, _error: Protocol.Media.PlayerError): void {\n    // TODO(tmathmeyer) show an error icon next to the player name\n  }\n\n  onMessage(_playerID: string, _message: Protocol.Media.PlayerMessage): void {\n    // TODO(tmathmeyer) show a message count number next to the player name.\n  }\n\n  onEvent(playerID: string, event: PlayerEvent): void {\n    const eventType = JSON.parse(event.value).event;\n    if (eventType === 'kPlay') {\n      this.setMediaElementPlayerIcon(playerID, 'largeicon-play-animation');\n    } else if (eventType === 'kPause') {\n      this.setMediaElementPlayerIcon(playerID, 'largeicon-pause-animation');\n    } else if (eventType === 'kWebMediaPlayerDestroyed') {\n      this.setMediaElementPlayerIcon(playerID, 'smallicon-videoplayer-destroyed');\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.sidebarTree.registerCSSFiles([playerListViewStyles]);\n  }\n}\n"]}