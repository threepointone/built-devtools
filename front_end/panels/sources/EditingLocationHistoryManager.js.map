{"version":3,"file":"EditingLocationHistoryManager.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/EditingLocationHistoryManager.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\n\nimport type {SourcesView} from './SourcesView.js';\nimport type {UISourceCodeFrame} from './UISourceCodeFrame.js';\n\nexport class EditingLocationHistoryManager {\n  private readonly sourcesView: SourcesView;\n  private readonly historyManager: Common.SimpleHistoryManager.SimpleHistoryManager;\n  private readonly currentSourceFrameCallback: () => UISourceCodeFrame | null;\n  constructor(sourcesView: SourcesView, currentSourceFrameCallback: () => UISourceCodeFrame | null) {\n    this.sourcesView = sourcesView;\n    this.historyManager = new Common.SimpleHistoryManager.SimpleHistoryManager(HistoryDepth);\n    this.currentSourceFrameCallback = currentSourceFrameCallback;\n  }\n\n  trackSourceFrameCursorJumps(sourceFrame: UISourceCodeFrame): void {\n    sourceFrame.textEditor.addEventListener(\n        SourceFrame.SourcesTextEditor.Events.JumpHappened, this.onJumpHappened.bind(this));\n  }\n\n  private onJumpHappened(event: Common.EventTarget.EventTargetEvent): void {\n    if (event.data.from) {\n      this.updateActiveState(event.data.from);\n    }\n    if (event.data.to) {\n      this.pushActiveState(event.data.to);\n    }\n  }\n\n  rollback(): void {\n    this.historyManager.rollback();\n  }\n\n  rollover(): void {\n    this.historyManager.rollover();\n  }\n\n  updateCurrentState(): void {\n    const sourceFrame = this.currentSourceFrameCallback();\n    if (!sourceFrame) {\n      return;\n    }\n    this.updateActiveState(sourceFrame.textEditor.selection());\n  }\n\n  pushNewState(): void {\n    const sourceFrame = this.currentSourceFrameCallback();\n    if (!sourceFrame) {\n      return;\n    }\n    this.pushActiveState(sourceFrame.textEditor.selection());\n  }\n\n  private updateActiveState(selection: TextUtils.TextRange.TextRange): void {\n    const active = (this.historyManager.active() as EditingLocationHistoryEntry | null);\n    if (!active) {\n      return;\n    }\n    const sourceFrame = this.currentSourceFrameCallback();\n    if (!sourceFrame) {\n      return;\n    }\n    const entry = new EditingLocationHistoryEntry(this.sourcesView, this, sourceFrame, selection);\n    active.merge(entry);\n  }\n\n  private pushActiveState(selection: TextUtils.TextRange.TextRange): void {\n    const sourceFrame = this.currentSourceFrameCallback();\n    if (!sourceFrame) {\n      return;\n    }\n    const entry = new EditingLocationHistoryEntry(this.sourcesView, this, sourceFrame, selection);\n    this.historyManager.push(entry);\n  }\n\n  removeHistoryForSourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.historyManager.filterOut(entry => {\n      const historyEntry = (entry as EditingLocationHistoryEntry);\n      return historyEntry.projectId === uiSourceCode.project().id() && historyEntry.url === uiSourceCode.url();\n    });\n  }\n}\n\nexport const HistoryDepth = 20;\n\nexport class EditingLocationHistoryEntry implements Common.SimpleHistoryManager.HistoryEntry {\n  private readonly sourcesView: SourcesView;\n  private readonly editingLocationManager: EditingLocationHistoryManager;\n  readonly projectId: string;\n  readonly url: string;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private positionHandle: any;\n\n  constructor(\n      sourcesView: SourcesView, editingLocationManager: EditingLocationHistoryManager, sourceFrame: UISourceCodeFrame,\n      selection: TextUtils.TextRange.TextRange) {\n    this.sourcesView = sourcesView;\n    this.editingLocationManager = editingLocationManager;\n    const uiSourceCode = sourceFrame.uiSourceCode();\n    this.projectId = uiSourceCode.project().id();\n    this.url = uiSourceCode.url();\n\n    const position = this.positionFromSelection(selection);\n    this.positionHandle = sourceFrame.textEditor.textEditorPositionHandle(position.lineNumber, position.columnNumber);\n  }\n\n  merge(entry: EditingLocationHistoryEntry): void {\n    if (this.projectId !== entry.projectId || this.url !== entry.url) {\n      return;\n    }\n    this.positionHandle = entry.positionHandle;\n  }\n\n  private positionFromSelection(selection: TextUtils.TextRange.TextRange): {\n    lineNumber: number,\n    columnNumber: number,\n  } {\n    return {lineNumber: selection.endLine, columnNumber: selection.endColumn};\n  }\n\n  valid(): boolean {\n    const position = this.positionHandle.resolve();\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCode(this.projectId, this.url);\n    return Boolean(position && uiSourceCode);\n  }\n\n  reveal(): void {\n    const position = this.positionHandle.resolve();\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCode(this.projectId, this.url);\n    if (!position || !uiSourceCode) {\n      return;\n    }\n\n    this.editingLocationManager.updateCurrentState();\n    this.sourcesView.showSourceLocation(uiSourceCode, position.lineNumber, position.columnNumber);\n  }\n}\n"]}