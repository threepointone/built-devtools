{"version":3,"file":"GutterDiffPlugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/GutterDiffPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport type * as Diff from '../../third_party/diff/diff.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport type * as TextEditor from '../../ui/legacy/components/text_editor/text_editor.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nimport {Plugin} from './Plugin.js';\n\nconst UIStrings = {\n  /**\n  *@description A context menu item in the Gutter Diff Plugin of the Sources panel\n  */\n  localModifications: 'Local Modifications...',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/GutterDiffPlugin.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class GutterDiffPlugin extends Plugin {\n  private readonly textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor;\n  private readonly uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  private decorations: GutterDecoration[];\n  private readonly workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n\n  constructor(\n      textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor, uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this.textEditor = textEditor;\n    this.uiSourceCode = uiSourceCode;\n\n    this.decorations = [];\n    this.textEditor.installGutter(DiffGutterType, true);\n    this.workspaceDiff = WorkspaceDiff.WorkspaceDiff.workspaceDiff();\n    this.workspaceDiff.subscribeToDiffChange(this.uiSourceCode, this.update, this);\n    this.update();\n  }\n\n  static accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Network;\n  }\n\n  private updateDecorations(removed: GutterDecoration[], added: GutterDecoration[]): void {\n    this.textEditor.operation(operation);\n\n    function operation(): void {\n      for (const decoration of removed) {\n        decoration.remove();\n      }\n      for (const decoration of added) {\n        decoration.install();\n      }\n    }\n  }\n\n  private update(): void {\n    if (this.uiSourceCode) {\n      this.workspaceDiff.requestDiff(this.uiSourceCode).then(this.innerUpdate.bind(this));\n    } else {\n      this.innerUpdate(null);\n    }\n  }\n\n  private innerUpdate(lineDiff: Diff.Diff.DiffArray|null): void {\n    if (!lineDiff) {\n      this.updateDecorations(this.decorations, []);\n      this.decorations = [];\n      return;\n    }\n\n    const diff = SourceFrame.SourceCodeDiff.SourceCodeDiff.computeDiff(lineDiff);\n\n    const newDecorations = new Map<number, {\n      lineNumber: number,\n      type: SourceFrame.SourceCodeDiff.EditType,\n    }>();\n    for (let i = 0; i < diff.length; ++i) {\n      const diffEntry = diff[i];\n      for (let lineNumber = diffEntry.from; lineNumber < diffEntry.to; ++lineNumber) {\n        newDecorations.set(lineNumber, {lineNumber: lineNumber, type: diffEntry.type});\n      }\n    }\n\n    const decorationDiff = this.calculateDecorationsDiff(newDecorations);\n    const addedDecorations =\n        decorationDiff.added.map(entry => new GutterDecoration(this.textEditor, entry.lineNumber, entry.type));\n\n    this.decorations = decorationDiff.equal.concat(addedDecorations);\n    this.updateDecorations(decorationDiff.removed, addedDecorations);\n    this.decorationsSetForTest(newDecorations);\n  }\n\n  private decorationsByLine(): Map<number, GutterDecoration> {\n    const decorations = new Map<number, GutterDecoration>();\n    for (const decoration of this.decorations) {\n      const lineNumber = decoration.lineNumber();\n      if (lineNumber !== -1) {\n        decorations.set(lineNumber, decoration);\n      }\n    }\n    return decorations;\n  }\n\n  private calculateDecorationsDiff(decorations: Map<number, {\n    lineNumber: number,\n    type: SourceFrame.SourceCodeDiff.EditType,\n  }>): {\n    added: {\n      lineNumber: number,\n      type: SourceFrame.SourceCodeDiff.EditType,\n    }[],\n    removed: GutterDecoration[],\n    equal: GutterDecoration[],\n  } {\n    const oldDecorations = this.decorationsByLine();\n    const leftKeys = [...oldDecorations.keys()];\n    const rightKeys = [...decorations.keys()];\n    leftKeys.sort((a, b) => a - b);\n    rightKeys.sort((a, b) => a - b);\n\n    const removed = [];\n    const added = [];\n    const equal = [];\n    let leftIndex = 0;\n    let rightIndex = 0;\n    while (leftIndex < leftKeys.length && rightIndex < rightKeys.length) {\n      const leftKey = leftKeys[leftIndex];\n      const rightKey = rightKeys[rightIndex];\n      const left = oldDecorations.get(leftKey);\n      const right = decorations.get(rightKey);\n      if (!left) {\n        throw new Error(`No decoration with key ${leftKey}`);\n      }\n      if (!right) {\n        throw new Error(`No decoration with key ${rightKey}`);\n      }\n      if (leftKey === rightKey && left.type === right.type) {\n        equal.push(left);\n        ++leftIndex;\n        ++rightIndex;\n      } else if (leftKey <= rightKey) {\n        removed.push(left);\n        ++leftIndex;\n      } else {\n        added.push(right);\n        ++rightIndex;\n      }\n    }\n    while (leftIndex < leftKeys.length) {\n      const leftKey = leftKeys[leftIndex++];\n      const left = oldDecorations.get(leftKey);\n      if (!left) {\n        throw new Error(`No decoration with key ${leftKey}`);\n      }\n      removed.push(left);\n    }\n    while (rightIndex < rightKeys.length) {\n      const rightKey = rightKeys[rightIndex++];\n      const right = decorations.get(rightKey);\n      if (!right) {\n        throw new Error(`No decoration with key ${rightKey}`);\n      }\n      added.push(right);\n    }\n    return {added: added, removed: removed, equal: equal};\n  }\n\n  private decorationsSetForTest(_decorations: Map<number, {\n    lineNumber: number,\n    type: SourceFrame.SourceCodeDiff.EditType,\n  }>): void {\n  }\n\n  async populateLineGutterContextMenu(contextMenu: UI.ContextMenu.ContextMenu, _lineNumber: number): Promise<void> {\n    GutterDiffPlugin.appendRevealDiffContextMenu(contextMenu, this.uiSourceCode);\n  }\n\n  async populateTextAreaContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, _lineNumber: number, _columnNumber: number): Promise<void> {\n    GutterDiffPlugin.appendRevealDiffContextMenu(contextMenu, this.uiSourceCode);\n  }\n\n  static appendRevealDiffContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    if (!WorkspaceDiff.WorkspaceDiff.workspaceDiff().isUISourceCodeModified(uiSourceCode)) {\n      return;\n    }\n    contextMenu.revealSection().appendItem(i18nString(UIStrings.localModifications), () => {\n      Common.Revealer.reveal(new WorkspaceDiff.WorkspaceDiff.DiffUILocation(uiSourceCode));\n    });\n  }\n\n  dispose(): void {\n    for (const decoration of this.decorations) {\n      decoration.remove();\n    }\n    WorkspaceDiff.WorkspaceDiff.workspaceDiff().unsubscribeFromDiffChange(this.uiSourceCode, this.update, this);\n  }\n}\n\nexport class GutterDecoration {\n  private readonly textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor;\n  private readonly position: TextEditor.CodeMirrorTextEditor.TextEditorPositionHandle;\n  private readonly className: string;\n  type: SourceFrame.SourceCodeDiff.EditType;\n\n  constructor(\n      textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor, lineNumber: number,\n      type: SourceFrame.SourceCodeDiff.EditType) {\n    this.textEditor = textEditor;\n    this.position = this.textEditor.textEditorPositionHandle(lineNumber, 0);\n    this.className = '';\n    if (type === SourceFrame.SourceCodeDiff.EditType.Insert) {\n      this.className = 'diff-entry-insert';\n    } else if (type === SourceFrame.SourceCodeDiff.EditType.Delete) {\n      this.className = 'diff-entry-delete';\n    } else if (type === SourceFrame.SourceCodeDiff.EditType.Modify) {\n      this.className = 'diff-entry-modify';\n    }\n    this.type = type;\n  }\n\n  lineNumber(): number {\n    const location = this.position.resolve();\n    if (!location) {\n      return -1;\n    }\n    return location.lineNumber;\n  }\n\n  install(): void {\n    const location = this.position.resolve();\n    if (!location) {\n      return;\n    }\n    const element = document.createElement('div');\n    element.classList.add('diff-marker');\n    element.textContent = '\\xA0';\n    this.textEditor.setGutterDecoration(location.lineNumber, DiffGutterType, element);\n    this.textEditor.toggleLineClass(location.lineNumber, this.className, true);\n  }\n\n  remove(): void {\n    const location = this.position.resolve();\n    if (!location) {\n      return;\n    }\n    this.textEditor.setGutterDecoration(location.lineNumber, DiffGutterType, null);\n    this.textEditor.toggleLineClass(location.lineNumber, this.className, false);\n  }\n}\n\nexport const DiffGutterType: string = 'CodeMirror-gutter-diff';\n\nlet contextMenuProviderInstance: ContextMenuProvider;\n\nexport class ContextMenuProvider implements UI.ContextMenu.Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ContextMenuProvider {\n    const {forceNew} = opts;\n    if (!contextMenuProviderInstance || forceNew) {\n      contextMenuProviderInstance = new ContextMenuProvider();\n    }\n\n    return contextMenuProviderInstance;\n  }\n\n  appendApplicableItems(_event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    let uiSourceCode: Workspace.UISourceCode.UISourceCode = (target as Workspace.UISourceCode.UISourceCode);\n    const binding = Persistence.Persistence.PersistenceImpl.instance().binding(uiSourceCode);\n    if (binding) {\n      uiSourceCode = binding.network;\n    }\n    GutterDiffPlugin.appendRevealDiffContextMenu(contextMenu, uiSourceCode);\n  }\n}\n"]}