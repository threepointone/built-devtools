{"version":3,"file":"AffectedElementsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/AffectedElementsView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAIhD,OAAO,EAAC,qBAAqB,EAAC,MAAM,4BAA4B,CAAC;AAGjE,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,SAAS,EAAE,gDAAgD;CAC5D,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC;AAC7F,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,OAAO,oBAAqB,SAAQ,qBAAqB;IACrD,KAAK,CAA4B;IAEzC,YAAY,MAAiB,EAAE,KAAgC;QAC7D,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEO,KAAK,CAAC,sBAAsB,CAAC,gBAA+D;QAClG,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,MAAM,OAAO,IAAI,gBAAgB,EAAE;YACtC,MAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;YAC1C,KAAK,EAAE,CAAC;SACT;QACD,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAES,wBAAwB,CAAC,KAAa;QAC9C,OAAO,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,EAAC,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;IACrD,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,OAA4C;QAC9E,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QACpF,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAChD,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrD,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as IssuesManager from '../../models/issues_manager/issues_manager.js';\n\nimport {AffectedResourcesView} from './AffectedResourcesView.js';\nimport type {IssueView} from './IssueView.js';\n\nconst UIStrings = {\n  /**\n  *@description Noun for singular or plural number of affected element resource indication in issue view.\n  */\n  nElements: '{n, plural, =1 {# element} other {# elements}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/AffectedElementsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class AffectedElementsView extends AffectedResourcesView {\n  private issue: IssuesManager.Issue.Issue;\n\n  constructor(parent: IssueView, issue: IssuesManager.Issue.Issue) {\n    super(parent);\n    this.issue = issue;\n  }\n\n  private async appendAffectedElements(affectedElements: Iterable<IssuesManager.Issue.AffectedElement>): Promise<void> {\n    let count = 0;\n    for (const element of affectedElements) {\n      await this.appendAffectedElement(element);\n      count++;\n    }\n    this.updateAffectedResourceCount(count);\n  }\n\n  protected getResourceNameWithCount(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nElements, {n: count});\n  }\n\n  private async appendAffectedElement(element: IssuesManager.Issue.AffectedElement): Promise<void> {\n    const cellElement = await this.createElementCell(element, this.issue.getCategory());\n    const rowElement = document.createElement('tr');\n    rowElement.appendChild(cellElement);\n    this.affectedResources.appendChild(rowElement);\n  }\n\n  update(): void {\n    this.clear();\n    this.appendAffectedElements(this.issue.elements());\n  }\n}\n"]}