{"version":3,"file":"ApplicationCacheModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ApplicationCacheModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GOOGLE INC. AND ITS CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GOOGLE INC.\n * OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class ApplicationCacheModel extends SDK.SDKModel.SDKModel {\n  private readonly agent: ProtocolProxyApi.ApplicationCacheApi;\n  private readonly statuses: Map<Protocol.Page.FrameId, number>;\n  private manifestURLsByFrame: Map<Protocol.Page.FrameId, string>;\n  private onLineInternal: boolean;\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    target.registerApplicationCacheDispatcher(new ApplicationCacheDispatcher(this));\n    this.agent = target.applicationCacheAgent();\n    this.agent.invoke_enable();\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      throw new Error('Target must provide an ResourceTreeModel');\n    }\n    resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, this.frameNavigatedCallback, this);\n    resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameDetached, this.frameDetached, this);\n\n    this.statuses = new Map();\n    this.manifestURLsByFrame = new Map();\n\n    this.mainFrameNavigated();\n    this.onLineInternal = true;\n  }\n\n  private frameNavigatedCallback(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>):\n      void {\n    this.frameNavigated(event);\n  }\n\n  private async frameNavigated(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>):\n      Promise<void> {\n    const frame = event.data;\n    if (frame.isMainFrame()) {\n      this.mainFrameNavigated();\n      return;\n    }\n\n    const frameId = frame.id;\n    const manifestURL = await this.agent.invoke_getManifestForFrame({frameId});\n    if (manifestURL !== null && !manifestURL) {\n      this.frameManifestRemoved(frameId);\n    }\n  }\n\n  private frameDetached(\n      event: Common.EventTarget.EventTargetEvent<{frame: SDK.ResourceTreeModel.ResourceTreeFrame, isSwap: boolean}>):\n      void {\n    this.frameManifestRemoved(event.data.frame.id);\n  }\n\n  reset(): void {\n    this.statuses.clear();\n    this.manifestURLsByFrame.clear();\n    this.dispatchEventToListeners(Events.FrameManifestsReset);\n  }\n\n  private async mainFrameNavigated(): Promise<void> {\n    const framesWithManifests = await this.agent.invoke_getFramesWithManifests();\n    if (framesWithManifests.getError()) {\n      return;\n    }\n    for (const frame of framesWithManifests.frameIds) {\n      this.frameManifestUpdated(frame.frameId, frame.manifestURL, frame.status);\n    }\n  }\n\n  private frameManifestUpdated(frameId: Protocol.Page.FrameId, manifestURL: string, status: number): void {\n    if (status === UNCACHED) {\n      this.frameManifestRemoved(frameId);\n      return;\n    }\n\n    if (!manifestURL) {\n      return;\n    }\n\n    const recordedManifestURL = this.manifestURLsByFrame.get(frameId);\n    if (recordedManifestURL && manifestURL !== recordedManifestURL) {\n      this.frameManifestRemoved(frameId);\n    }\n\n    const statusChanged = this.statuses.get(frameId) !== status;\n    this.statuses.set(frameId, status);\n\n    if (!this.manifestURLsByFrame.has(frameId)) {\n      this.manifestURLsByFrame.set(frameId, manifestURL);\n      this.dispatchEventToListeners(Events.FrameManifestAdded, frameId);\n    }\n\n    if (statusChanged) {\n      this.dispatchEventToListeners(Events.FrameManifestStatusUpdated, frameId);\n    }\n  }\n\n  private frameManifestRemoved(frameId: Protocol.Page.FrameId): void {\n    const removed = this.manifestURLsByFrame.delete(frameId);\n    this.statuses.delete(frameId);\n    if (removed) {\n      this.dispatchEventToListeners(Events.FrameManifestRemoved, frameId);\n    }\n  }\n\n  frameManifestURL(frameId: Protocol.Page.FrameId): string {\n    return this.manifestURLsByFrame.get(frameId) || '';\n  }\n\n  frameManifestStatus(frameId: Protocol.Page.FrameId): number {\n    return this.statuses.get(frameId) || UNCACHED;\n  }\n\n  get onLine(): boolean {\n    return this.onLineInternal;\n  }\n\n  statusUpdated(frameId: Protocol.Page.FrameId, manifestURL: string, status: number): void {\n    this.frameManifestUpdated(frameId, manifestURL, status);\n  }\n\n  async requestApplicationCache(frameId: Protocol.Page.FrameId):\n      Promise<Protocol.ApplicationCache.ApplicationCache|null> {\n    const response = await this.agent.invoke_getApplicationCacheForFrame({frameId});\n    if (response.getError()) {\n      return null;\n    }\n    return response.applicationCache;\n  }\n\n  networkStateUpdated(isNowOnline: boolean): void {\n    this.onLineInternal = isNowOnline;\n    this.dispatchEventToListeners(Events.NetworkStateChanged, isNowOnline);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(ApplicationCacheModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  FrameManifestStatusUpdated = 'FrameManifestStatusUpdated',\n  FrameManifestAdded = 'FrameManifestAdded',\n  FrameManifestRemoved = 'FrameManifestRemoved',\n  FrameManifestsReset = 'FrameManifestsReset',\n  NetworkStateChanged = 'NetworkStateChanged',\n}\n\nexport class ApplicationCacheDispatcher implements ProtocolProxyApi.ApplicationCacheDispatcher {\n  private readonly applicationCacheModel: ApplicationCacheModel;\n  constructor(applicationCacheModel: ApplicationCacheModel) {\n    this.applicationCacheModel = applicationCacheModel;\n  }\n\n  applicationCacheStatusUpdated({frameId, manifestURL, status}:\n                                    Protocol.ApplicationCache.ApplicationCacheStatusUpdatedEvent): void {\n    this.applicationCacheModel.statusUpdated(frameId, manifestURL, status);\n  }\n\n  networkStateUpdated({isNowOnline}: Protocol.ApplicationCache.NetworkStateUpdatedEvent): void {\n    this.applicationCacheModel.networkStateUpdated(isNowOnline);\n  }\n}\n\nexport const UNCACHED = 0;\nexport const IDLE = 1;\nexport const CHECKING = 2;\nexport const DOWNLOADING = 3;\nexport const UPDATEREADY = 4;\nexport const OBSOLETE = 5;\n"]}