{"version":3,"file":"ConsolePrompt.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console/ConsolePrompt.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as TextEditor from '../../ui/legacy/components/text_editor/text_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ConsolePanel} from './ConsolePanel.js';\nimport consolePromptStyles from './consolePrompt.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Console Prompt of the Console panel\n  */\n  consolePrompt: 'Console prompt',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsolePrompt.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ConsolePrompt extends UI.Widget.Widget {\n  private addCompletionsFromHistory: boolean;\n  private historyInternal: ConsoleHistoryManager;\n  private initialText: string;\n  private editor: UI.TextEditor.TextEditor|null;\n  private readonly eagerPreviewElement: HTMLDivElement;\n  private textChangeThrottler: Common.Throttler.Throttler;\n  private readonly formatter: ObjectUI.RemoteObjectPreviewFormatter.RemoteObjectPreviewFormatter;\n  private requestPreviewBound: () => Promise<void>;\n  private readonly innerPreviewElement: HTMLElement;\n  private readonly promptIcon: UI.Icon.Icon;\n  private readonly iconThrottler: Common.Throttler.Throttler;\n  private readonly eagerEvalSetting: Common.Settings.Setting<boolean>;\n  private previewRequestForTest: Promise<void>|null;\n  private defaultAutocompleteConfig: UI.TextEditor.AutocompleteConfig|null;\n  private highlightingNode: boolean;\n\n  constructor() {\n    super();\n    this.addCompletionsFromHistory = true;\n    this.historyInternal = new ConsoleHistoryManager();\n\n    this.initialText = '';\n    this.editor = null;\n    this.eagerPreviewElement = document.createElement('div');\n    this.eagerPreviewElement.classList.add('console-eager-preview');\n    this.textChangeThrottler = new Common.Throttler.Throttler(150);\n    this.formatter = new ObjectUI.RemoteObjectPreviewFormatter.RemoteObjectPreviewFormatter();\n    this.requestPreviewBound = this.requestPreview.bind(this);\n    this.innerPreviewElement = this.eagerPreviewElement.createChild('div', 'console-eager-inner-preview');\n    this.eagerPreviewElement.appendChild(UI.Icon.Icon.create('smallicon-command-result', 'preview-result-icon'));\n\n    const editorContainerElement = this.element.createChild('div', 'console-prompt-editor-container');\n    this.element.appendChild(this.eagerPreviewElement);\n\n    this.promptIcon = UI.Icon.Icon.create('smallicon-text-prompt', 'console-prompt-icon');\n    this.element.appendChild(this.promptIcon);\n    this.iconThrottler = new Common.Throttler.Throttler(0);\n\n    this.eagerEvalSetting = Common.Settings.Settings.instance().moduleSetting('consoleEagerEval');\n    this.eagerEvalSetting.addChangeListener(this.eagerSettingChanged.bind(this));\n    this.eagerPreviewElement.classList.toggle('hidden', !this.eagerEvalSetting.get());\n\n    this.element.tabIndex = 0;\n    this.previewRequestForTest = null;\n\n    this.defaultAutocompleteConfig = null;\n\n    this.highlightingNode = false;\n\n    const factory = TextEditor.CodeMirrorTextEditor.CodeMirrorTextEditorFactory.instance();\n\n    const options = {\n      devtoolsAccessibleName: (i18nString(UIStrings.consolePrompt) as string),\n      lineNumbers: false,\n      lineWrapping: true,\n      mimeType: 'javascript',\n      autoHeight: true,\n    };\n    this.editor = factory.createEditor((options as UI.TextEditor.Options));\n\n    this.defaultAutocompleteConfig =\n        ObjectUI.JavaScriptAutocomplete.JavaScriptAutocompleteConfig.createConfigForEditor(this.editor);\n    this.editor.configureAutocomplete(Object.assign({}, this.defaultAutocompleteConfig, {\n      suggestionsCallback: this.wordsWithQuery.bind(this),\n      anchorBehavior: UI.GlassPane.AnchorBehavior.PreferTop,\n    }));\n    this.editor.widget().element.addEventListener('keydown', this.editorKeyDown.bind(this), true);\n    this.editor.widget().show(editorContainerElement);\n    this.editor.addEventListener(UI.TextEditor.Events.CursorChanged, this.updatePromptIcon, this);\n    this.editor.addEventListener(UI.TextEditor.Events.TextChanged, this.onTextChanged, this);\n    this.editor.addEventListener(UI.TextEditor.Events.SuggestionChanged, this.onTextChanged, this);\n\n    this.setText(this.initialText);\n    this.initialText = '';\n    if (this.hasFocus()) {\n      this.focus();\n    }\n    this.element.removeAttribute('tabindex');\n    this.editor.widget().element.tabIndex = -1;\n\n    this.editorSetForTest();\n\n    // Record the console tool load time after the console prompt constructor is complete.\n    Host.userMetrics.panelLoaded('console', 'DevTools.Launch.Console');\n  }\n\n  private eagerSettingChanged(): void {\n    const enabled = this.eagerEvalSetting.get();\n    this.eagerPreviewElement.classList.toggle('hidden', !enabled);\n    if (enabled) {\n      this.requestPreview();\n    }\n  }\n\n  belowEditorElement(): Element {\n    return this.eagerPreviewElement;\n  }\n\n  private onTextChanged(): void {\n    // ConsoleView and prompt both use a throttler, so we clear the preview\n    // ASAP to avoid inconsistency between a fresh viewport and stale preview.\n    if (this.eagerEvalSetting.get()) {\n      const asSoonAsPossible = !this.editor || !this.editor.textWithCurrentSuggestion();\n      this.previewRequestForTest = this.textChangeThrottler.schedule(this.requestPreviewBound, asSoonAsPossible);\n    }\n    this.updatePromptIcon();\n    this.dispatchEventToListeners(Events.TextChanged);\n  }\n\n  private async requestPreview(): Promise<void> {\n    if (!this.editor) {\n      return;\n    }\n    const text = this.editor.textWithCurrentSuggestion().trim();\n    const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    const {preview, result} = await ObjectUI.JavaScriptREPL.JavaScriptREPL.evaluateAndBuildPreview(\n        text, true /* throwOnSideEffect */, true /* replMode */, 500 /* timeout */);\n    this.innerPreviewElement.removeChildren();\n    if (preview.deepTextContent() !== this.editor.textWithCurrentSuggestion().trim()) {\n      this.innerPreviewElement.appendChild(preview);\n    }\n    if (result && 'object' in result && result.object && result.object.subtype === 'node') {\n      this.highlightingNode = true;\n      SDK.OverlayModel.OverlayModel.highlightObjectAsDOMNode(result.object);\n    } else if (this.highlightingNode) {\n      this.highlightingNode = false;\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    if (result && executionContext) {\n      executionContext.runtimeModel.releaseEvaluationResult(result);\n    }\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([consolePromptStyles]);\n  }\n\n  willHide(): void {\n    if (this.highlightingNode) {\n      this.highlightingNode = false;\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n  }\n\n  history(): ConsoleHistoryManager {\n    return this.historyInternal;\n  }\n\n  clearAutocomplete(): void {\n    if (this.editor) {\n      this.editor.clearAutocomplete();\n    }\n  }\n\n  private isCaretAtEndOfPrompt(): boolean {\n    return this.editor !== null &&\n        this.editor.selection().collapseToEnd().equal(this.editor.fullRange().collapseToEnd());\n  }\n\n  moveCaretToEndOfPrompt(): void {\n    if (this.editor) {\n      this.editor.setSelection(TextUtils.TextRange.TextRange.createFromLocation(Infinity, Infinity));\n    }\n  }\n\n  setText(text: string): void {\n    if (this.editor) {\n      this.editor.setText(text);\n    } else {\n      this.initialText = text;\n    }\n    this.dispatchEventToListeners(Events.TextChanged);\n  }\n\n  text(): string {\n    return this.editor ? this.editor.text() : this.initialText;\n  }\n\n  setAddCompletionsFromHistory(value: boolean): void {\n    this.addCompletionsFromHistory = value;\n  }\n\n  private editorKeyDown(event: Event): void {\n    if (!this.editor) {\n      return;\n    }\n    const keyboardEvent = (event as KeyboardEvent);\n    let newText;\n    let isPrevious;\n    // Check against visual coordinates in case lines wrap.\n    const selection = this.editor.selection();\n    const cursorY = this.editor.visualCoordinates(selection.endLine, selection.endColumn).y;\n\n    switch (keyboardEvent.keyCode) {\n      case UI.KeyboardShortcut.Keys.Up.code: {\n        const startY = this.editor.visualCoordinates(0, 0).y;\n        if (keyboardEvent.shiftKey || !selection.isEmpty() || cursorY !== startY) {\n          break;\n        }\n        newText = this.historyInternal.previous(this.text());\n        isPrevious = true;\n        break;\n      }\n      case UI.KeyboardShortcut.Keys.Down.code: {\n        const fullRange = this.editor.fullRange();\n        const endY = this.editor.visualCoordinates(fullRange.endLine, fullRange.endColumn).y;\n        if (keyboardEvent.shiftKey || !selection.isEmpty() || cursorY !== endY) {\n          break;\n        }\n        newText = this.historyInternal.next();\n        break;\n      }\n      case UI.KeyboardShortcut.Keys.P.code: {  // Ctrl+P = Previous\n        if (Host.Platform.isMac() && keyboardEvent.ctrlKey && !keyboardEvent.metaKey && !keyboardEvent.altKey &&\n            !keyboardEvent.shiftKey) {\n          newText = this.historyInternal.previous(this.text());\n          isPrevious = true;\n        }\n        break;\n      }\n      case UI.KeyboardShortcut.Keys.N.code: {  // Ctrl+N = Next\n        if (Host.Platform.isMac() && keyboardEvent.ctrlKey && !keyboardEvent.metaKey && !keyboardEvent.altKey &&\n            !keyboardEvent.shiftKey) {\n          newText = this.historyInternal.next();\n        }\n        break;\n      }\n      case UI.KeyboardShortcut.Keys.Enter.code: {\n        this.enterKeyPressed(keyboardEvent);\n        break;\n      }\n      case UI.KeyboardShortcut.Keys.Tab.code: {\n        if (!this.text()) {\n          keyboardEvent.consume();\n        }\n        break;\n      }\n    }\n\n    if (newText === undefined) {\n      return;\n    }\n    keyboardEvent.consume(true);\n    this.setText(newText);\n\n    if (isPrevious) {\n      this.editor.setSelection(TextUtils.TextRange.TextRange.createFromLocation(0, Infinity));\n    } else {\n      this.moveCaretToEndOfPrompt();\n    }\n  }\n\n  private async enterWillEvaluate(): Promise<boolean> {\n    if (!this.isCaretAtEndOfPrompt()) {\n      return true;\n    }\n    return await ObjectUI.JavaScriptAutocomplete.JavaScriptAutocomplete.isExpressionComplete(this.text());\n  }\n\n  private updatePromptIcon(): void {\n    this.iconThrottler.schedule(async () => {\n      const canComplete = await this.enterWillEvaluate();\n      this.promptIcon.classList.toggle('console-prompt-incomplete', !canComplete);\n    });\n  }\n\n  private async enterKeyPressed(event: KeyboardEvent): Promise<void> {\n    if (event.altKey || event.ctrlKey || event.shiftKey) {\n      return;\n    }\n\n    event.consume(true);\n\n    // Since we prevent default, manually emulate the native \"scroll on key input\" behavior.\n    this.element.scrollIntoView();\n    this.clearAutocomplete();\n\n    const str = this.text();\n    if (!str.length) {\n      return;\n    }\n\n    if (await this.enterWillEvaluate()) {\n      await this.appendCommand(str, true);\n    } else if (this.editor) {\n      this.editor.newlineAndIndent();\n    }\n    this.enterProcessedForTest();\n  }\n\n  private async appendCommand(text: string, useCommandLineAPI: boolean): Promise<void> {\n    this.setText('');\n    const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    if (currentExecutionContext) {\n      const executionContext = currentExecutionContext;\n      const message = SDK.ConsoleModel.ConsoleModel.instance().addCommandMessage(executionContext, text);\n      const expression = ObjectUI.JavaScriptREPL.JavaScriptREPL.preprocessExpression(text);\n      SDK.ConsoleModel.ConsoleModel.instance().evaluateCommandInConsole(\n          executionContext, message, expression, useCommandLineAPI);\n      if (ConsolePanel.instance().isShowing()) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.CommandEvaluatedInConsolePanel);\n      }\n    }\n  }\n\n  private enterProcessedForTest(): void {\n  }\n\n  private historyCompletions(prefix: string, force?: boolean): UI.SuggestBox.Suggestions {\n    const text = this.text();\n    if (!this.addCompletionsFromHistory || !this.isCaretAtEndOfPrompt() || (!text && !force)) {\n      return [];\n    }\n    const result = [];\n    const set = new Set<string>();\n    const data = this.historyInternal.historyData();\n    for (let i = data.length - 1; i >= 0 && result.length < 50; --i) {\n      const item = data[i];\n      if (!item.startsWith(text)) {\n        continue;\n      }\n      if (set.has(item)) {\n        continue;\n      }\n      set.add(item);\n      result.push(\n          {text: item.substring(text.length - prefix.length), iconType: 'smallicon-text-prompt', isSecondary: true});\n    }\n    return result as UI.SuggestBox.Suggestions;\n  }\n\n  focus(): void {\n    if (this.editor) {\n      this.editor.widget().focus();\n    } else {\n      this.element.focus();\n    }\n  }\n\n  private async wordsWithQuery(\n      queryRange: TextUtils.TextRange.TextRange, substituteRange: TextUtils.TextRange.TextRange,\n      force?: boolean): Promise<UI.SuggestBox.Suggestions> {\n    if (!this.editor || !this.defaultAutocompleteConfig || !this.defaultAutocompleteConfig.suggestionsCallback) {\n      return [];\n    }\n    const query = this.editor.text(queryRange);\n    const words = await this.defaultAutocompleteConfig.suggestionsCallback(queryRange, substituteRange, force);\n    const historyWords = this.historyCompletions(query, force);\n    return words ? words.concat(historyWords) : historyWords;\n  }\n\n  private editorSetForTest(): void {\n  }\n}\n\nexport class ConsoleHistoryManager {\n  private data: string[];\n  private historyOffset: number;\n  private uncommittedIsTop?: boolean;\n  constructor() {\n    this.data = [];\n\n    /**\n     * 1-based entry in the history stack.\n     */\n    this.historyOffset = 1;\n  }\n\n  historyData(): string[] {\n    return this.data;\n  }\n\n  setHistoryData(data: string[]): void {\n    this.data = data.slice();\n    this.historyOffset = 1;\n  }\n\n  /**\n   * Pushes a committed text into the history.\n   */\n  pushHistoryItem(text: string): void {\n    if (this.uncommittedIsTop) {\n      this.data.pop();\n      delete this.uncommittedIsTop;\n    }\n\n    this.historyOffset = 1;\n    if (text === this.currentHistoryItem()) {\n      return;\n    }\n    this.data.push(text);\n  }\n\n  /**\n   * Pushes the current (uncommitted) text into the history.\n   */\n  private pushCurrentText(currentText: string): void {\n    if (this.uncommittedIsTop) {\n      this.data.pop();\n    }  // Throw away obsolete uncommitted text.\n    this.uncommittedIsTop = true;\n    this.data.push(currentText);\n  }\n\n  previous(currentText: string): string|undefined {\n    if (this.historyOffset > this.data.length) {\n      return undefined;\n    }\n    if (this.historyOffset === 1) {\n      this.pushCurrentText(currentText);\n    }\n    ++this.historyOffset;\n    return this.currentHistoryItem();\n  }\n\n  next(): string|undefined {\n    if (this.historyOffset === 1) {\n      return undefined;\n    }\n    --this.historyOffset;\n    return this.currentHistoryItem();\n  }\n\n  private currentHistoryItem(): string|undefined {\n    return this.data[this.data.length - this.historyOffset];\n  }\n}\n\nexport const enum Events {\n  TextChanged = 'TextChanged',\n}\n"]}