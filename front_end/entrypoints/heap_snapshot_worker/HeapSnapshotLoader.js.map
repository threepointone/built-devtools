{"version":3,"file":"HeapSnapshotLoader.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/heap_snapshot_worker/HeapSnapshotLoader.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport {HeapSnapshotProgress, JSHeapSnapshot} from './HeapSnapshot.js';\nimport type {HeapSnapshotHeader, Profile} from './HeapSnapshot.js';\nimport type {HeapSnapshotWorkerDispatcher} from './HeapSnapshotWorkerDispatcher.js';\n\nexport class HeapSnapshotLoader {\n  private readonly progress: HeapSnapshotProgress;\n  private buffer: string;\n  private dataCallback: ((value: string|PromiseLike<string>) => void)|null;\n  private done: boolean;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private snapshot?: {[x: string]: any};\n  private array!: number[]|Uint32Array|null;\n  private arrayIndex!: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private json?: any;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private jsonTokenizer?: any;\n  constructor(dispatcher: HeapSnapshotWorkerDispatcher) {\n    this.reset();\n    this.progress = new HeapSnapshotProgress(dispatcher);\n    this.buffer = '';\n    this.dataCallback = null;\n    this.done = false;\n    this.parseInput();\n  }\n\n  dispose(): void {\n    this.reset();\n  }\n\n  private reset(): void {\n    this.json = '';\n    this.snapshot = undefined;\n  }\n\n  close(): void {\n    this.done = true;\n    if (this.dataCallback) {\n      this.dataCallback('');\n    }\n  }\n\n  buildSnapshot(): JSHeapSnapshot {\n    this.snapshot = this.snapshot || {};\n\n    this.progress.updateStatus('Processing snapshot…');\n    const result = new JSHeapSnapshot((this.snapshot as Profile), this.progress);\n    this.reset();\n    return result;\n  }\n\n  private parseUintArray(): boolean {\n    let index = 0;\n    const char0 = '0'.charCodeAt(0);\n    const char9 = '9'.charCodeAt(0);\n    const closingBracket = ']'.charCodeAt(0);\n    const length = this.json.length;\n    while (true) {\n      while (index < length) {\n        const code = this.json.charCodeAt(index);\n        if (char0 <= code && code <= char9) {\n          break;\n        } else if (code === closingBracket) {\n          this.json = this.json.slice(index + 1);\n          return false;\n        }\n        ++index;\n      }\n      if (index === length) {\n        this.json = '';\n        return true;\n      }\n      let nextNumber = 0;\n      const startIndex = index;\n      while (index < length) {\n        const code = this.json.charCodeAt(index);\n        if (char0 > code || code > char9) {\n          break;\n        }\n        nextNumber *= 10;\n        nextNumber += (code - char0);\n        ++index;\n      }\n      if (index === length) {\n        this.json = this.json.slice(startIndex);\n        return true;\n      }\n      if (!this.array) {\n        throw new Error('Array not instantiated');\n      }\n      this.array[this.arrayIndex++] = nextNumber;\n    }\n  }\n\n  private parseStringsArray(): void {\n    this.progress.updateStatus('Parsing strings…');\n    const closingBracketIndex = this.json.lastIndexOf(']');\n    if (closingBracketIndex === -1) {\n      throw new Error('Incomplete JSON');\n    }\n    this.json = this.json.slice(0, closingBracketIndex + 1);\n\n    if (!this.snapshot) {\n      throw new Error('No snapshot in parseStringsArray');\n    }\n    this.snapshot.strings = JSON.parse(this.json);\n  }\n\n  write(chunk: string): void {\n    this.buffer += chunk;\n    if (!this.dataCallback) {\n      return;\n    }\n    this.dataCallback(this.buffer);\n    this.dataCallback = null;\n    this.buffer = '';\n  }\n\n  private fetchChunk(): Promise<string> {\n    return this.done ? Promise.resolve(this.buffer) : new Promise(r => {\n      this.dataCallback = r;\n    });\n  }\n\n  private async findToken(token: string, startIndex?: number): Promise<number> {\n    while (true) {\n      const pos = this.json.indexOf(token, startIndex || 0);\n      if (pos !== -1) {\n        return pos;\n      }\n      startIndex = this.json.length - token.length + 1;\n      this.json += await this.fetchChunk();\n    }\n  }\n\n  private async parseArray(name: string, title: string, length?: number): Promise<number[]|Uint32Array> {\n    const nameIndex = await this.findToken(name);\n    const bracketIndex = await this.findToken('[', nameIndex);\n    this.json = this.json.slice(bracketIndex + 1);\n    this.array = length ? new Uint32Array(length) : [];\n    this.arrayIndex = 0;\n    while (this.parseUintArray()) {\n      if (length) {\n        this.progress.updateProgress(title, this.arrayIndex, this.array.length);\n      } else {\n        this.progress.updateStatus(title);\n      }\n      this.json += await this.fetchChunk();\n    }\n    const result = this.array;\n    this.array = null;\n    return result;\n  }\n\n  private async parseInput(): Promise<void> {\n    const snapshotToken = '\"snapshot\"';\n    const snapshotTokenIndex = await this.findToken(snapshotToken);\n    if (snapshotTokenIndex === -1) {\n      throw new Error('Snapshot token not found');\n    }\n\n    this.progress.updateStatus('Loading snapshot info…');\n    const json = this.json.slice(snapshotTokenIndex + snapshotToken.length + 1);\n    this.jsonTokenizer = new TextUtils.TextUtils.BalancedJSONTokenizer(metaJSON => {\n      this.json = this.jsonTokenizer.remainder();\n      this.jsonTokenizer = null;\n\n      this.snapshot = this.snapshot || {};\n      this.snapshot.snapshot = (JSON.parse(metaJSON) as HeapSnapshotHeader);\n    });\n    this.jsonTokenizer.write(json);\n    while (this.jsonTokenizer) {\n      this.jsonTokenizer.write(await this.fetchChunk());\n    }\n\n    this.snapshot = this.snapshot || {};\n    const nodes = await this.parseArray(\n        '\"nodes\"', 'Loading nodes… {PH1}%',\n        this.snapshot.snapshot.meta.node_fields.length * this.snapshot.snapshot.node_count);\n    this.snapshot.nodes = (nodes as Uint32Array);\n\n    const edges = await this.parseArray(\n        '\"edges\"', 'Loading edges… {PH1}%',\n        this.snapshot.snapshot.meta.edge_fields.length * this.snapshot.snapshot.edge_count);\n    this.snapshot.edges = (edges as Uint32Array);\n\n    if (this.snapshot.snapshot.trace_function_count) {\n      const traceFunctionInfos = await this.parseArray(\n          '\"trace_function_infos\"', 'Loading allocation traces… {PH1}%',\n          this.snapshot.snapshot.meta.trace_function_info_fields.length * this.snapshot.snapshot.trace_function_count);\n      this.snapshot.trace_function_infos = (traceFunctionInfos as Uint32Array);\n\n      const thisTokenEndIndex = await this.findToken(':');\n      const nextTokenIndex = await this.findToken('\"', thisTokenEndIndex);\n      const openBracketIndex = this.json.indexOf('[');\n      const closeBracketIndex = this.json.lastIndexOf(']', nextTokenIndex);\n      this.snapshot.trace_tree = JSON.parse(this.json.substring(openBracketIndex, closeBracketIndex + 1));\n      this.json = this.json.slice(closeBracketIndex + 1);\n    }\n\n    if (this.snapshot.snapshot.meta.sample_fields) {\n      const samples = await this.parseArray('\"samples\"', 'Loading samples…');\n      this.snapshot.samples = (samples as number[]);\n    }\n\n    if (this.snapshot.snapshot.meta['location_fields']) {\n      const locations = await this.parseArray('\"locations\"', 'Loading locations…');\n      this.snapshot.locations = (locations as number[]);\n    } else {\n      this.snapshot.locations = [];\n    }\n\n    this.progress.updateStatus('Loading strings…');\n    const stringsTokenIndex = await this.findToken('\"strings\"');\n    const bracketIndex = await this.findToken('[', stringsTokenIndex);\n    this.json = this.json.slice(bracketIndex);\n    while (!this.done) {\n      this.json += await this.fetchChunk();\n    }\n    this.parseStringsArray();\n  }\n}\n"]}