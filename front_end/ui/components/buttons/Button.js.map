{"version":3,"file":"Button.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/buttons/Button.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAC;AACtD,OAAO,KAAK,gBAAgB,MAAM,uBAAuB,CAAC;AAC1D,OAAO,KAAK,UAAU,MAAM,+BAA+B,CAAC;AAE5D,OAAO,YAAY,MAAM,iBAAiB,CAAC;AAsB3C,MAAM,OAAO,MAAO,SAAQ,WAAW;IACrC,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,iBAAiB,CAAC;IAC7C,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC3C,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,KAAK,GAAe,EAAE,CAAC;IAExC;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED;;;OAGG;IACH,IAAI,IAAI,CAAC,IAA2B;QAClC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,OAAO,CAAC,OAAyB;QACnC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,OAAO,CAAC,OAAgB;QAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1E,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,CAAC,YAAY,CAAC,CAAC;QAChD,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1E,CAAC;IAEO,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QACD,MAAM,OAAO,GAAG;YACd,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,4BAAoB;YAC/C,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,gCAAsB;YACnD,WAAW,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;SACzC,CAAC;QACF,mBAAmB;QACnB,OAAO,CAAC,MAAM,CACZ,OAAO,CAAC,IAAI,CAAA;wBACM,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;oBAC5D;YACN,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;YAC5B,KAAK,EAAE,yBAAyB;SACL;;cAE3B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,EAAE;;;OAG9C,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,kBAAkB;IACpB,CAAC;;AAGH,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\nimport * as IconButton from '../icon_button/icon_button.js';\n\nimport buttonStyles from './button.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-button': Button;\n  }\n}\n\nexport const enum Variant {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary',\n}\n\nexport interface ButtonData {\n  iconUrl?: string;\n  variant?: Variant;\n}\n\nexport interface ButtonDataWithVariant extends ButtonData {\n  variant: Variant;\n}\n\nexport class Button extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-button`;\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private readonly boundRender = this.render.bind(this);\n  private readonly props: ButtonData = {};\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'button');\n  }\n\n  /**\n   * Perfer using the .data= setter instead of setting the individual properties\n   * for increased type-safety.\n   */\n  set data(data: ButtonDataWithVariant) {\n    this.props.variant = data.variant;\n    this.props.iconUrl = data.iconUrl;\n    ComponentHelpers.ScheduledRender.scheduleRender(this, this.boundRender);\n  }\n\n  set iconUrl(iconUrl: string|undefined) {\n    this.props.iconUrl = iconUrl;\n    ComponentHelpers.ScheduledRender.scheduleRender(this, this.boundRender);\n  }\n\n  set variant(variant: Variant) {\n    this.props.variant = variant;\n    ComponentHelpers.ScheduledRender.scheduleRender(this, this.boundRender);\n  }\n\n  connectedCallback(): void {\n    this.shadow.adoptedStyleSheets = [buttonStyles];\n    ComponentHelpers.ScheduledRender.scheduleRender(this, this.boundRender);\n  }\n\n  private render(): void {\n    if (!this.props.variant) {\n      throw new Error('Button requires a variant to be defined');\n    }\n    const classes = {\n      primary: this.props.variant === Variant.PRIMARY,\n      secondary: this.props.variant === Variant.SECONDARY,\n      'with-icon': Boolean(this.props.iconUrl),\n    };\n    // clang-format off\n    LitHtml.render(\n      LitHtml.html`\n        <button class=${LitHtml.Directives.classMap(classes)}>\n          ${this.props.iconUrl ? LitHtml.html`<${IconButton.Icon.Icon.litTagName}\n            .data=${{\n              iconPath: this.props.iconUrl,\n              color: 'var(--color-background)',\n            } as IconButton.Icon.IconData}\n          >\n          </${IconButton.Icon.Icon.litTagName}>` : ''}\n          <slot></slot>\n        </button>\n      `, this.shadow);\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-button', Button);\n"]}