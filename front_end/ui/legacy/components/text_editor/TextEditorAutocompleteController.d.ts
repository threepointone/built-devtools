import * as UI from '../../legacy.js';
import type { CodeMirrorTextEditor } from './CodeMirrorTextEditor.js';
export declare class TextEditorAutocompleteController implements UI.SuggestBox.SuggestBoxDelegate {
    private textEditor;
    private codeMirror;
    private config;
    private initialized;
    private readonly mouseDown;
    private lastHintText;
    private suggestBox;
    private currentSuggestion;
    private hintElement;
    private readonly tooltipGlassPane;
    private readonly tooltipElement;
    private queryRange;
    private dictionary?;
    private updatedLines?;
    private hintMarker?;
    private anchorBox?;
    constructor(textEditor: CodeMirrorTextEditor, codeMirror: any, config: UI.TextEditor.AutocompleteConfig);
    private initializeIfNeeded;
    dispose(): void;
    private beforeChange;
    private addWordsFromText;
    private removeWordsFromText;
    private substituteRange;
    private wordsWithQuery;
    private changes;
    private blur;
    private validateSelectionsContexts;
    autocomplete(force?: boolean): void;
    private setHint;
    private clearHint;
    private onSuggestionsShownForTest;
    private onSuggestionsHiddenForTest;
    clearAutocomplete(): void;
    private hideSuggestBox;
    keyDown(event: KeyboardEvent): boolean;
    private isCursorAtEndOfLine;
    applySuggestion(suggestion: UI.SuggestBox.Suggestion | null, _isIntermediateSuggestion?: boolean): void;
    acceptSuggestion(): void;
    ariaControlledBy(): Element;
    textWithCurrentSuggestion(): string;
    private onScroll;
    private updateTooltip;
    private onCursorActivity;
    private onCursorActivityHandledForTest;
    private updateAnchorBox;
    static readonly HintBookmark: unique symbol;
}
