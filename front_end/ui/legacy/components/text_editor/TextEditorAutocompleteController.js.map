{"version":3,"file":"TextEditorAutocompleteController.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/text_editor/TextEditorAutocompleteController.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport type {CodeMirrorTextEditor} from './CodeMirrorTextEditor.js';\n\nexport class TextEditorAutocompleteController implements UI.SuggestBox.SuggestBoxDelegate {\n  private textEditor: CodeMirrorTextEditor;\n  private codeMirror: any;\n  private config: UI.TextEditor.AutocompleteConfig;\n  private initialized: boolean;\n  private readonly mouseDown: () => void;\n  private lastHintText: string;\n  private suggestBox: UI.SuggestBox.SuggestBox|null;\n  private currentSuggestion: UI.SuggestBox.Suggestion|null;\n  private hintElement: HTMLSpanElement;\n  private readonly tooltipGlassPane: UI.GlassPane.GlassPane;\n  private readonly tooltipElement: HTMLDivElement;\n  private queryRange: TextUtils.TextRange.TextRange|null;\n  private dictionary?: Common.TextDictionary.TextDictionary;\n  private updatedLines?: any;\n  private hintMarker?: any|null;\n  private anchorBox?: AnchorBox|null;\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  constructor(textEditor: CodeMirrorTextEditor, codeMirror: any, config: UI.TextEditor.AutocompleteConfig) {\n    this.textEditor = textEditor;\n    this.codeMirror = codeMirror;\n    this.config = config;\n    this.initialized = false;\n\n    this.onScroll = this.onScroll.bind(this);\n    this.onCursorActivity = this.onCursorActivity.bind(this);\n    this.changes = this.changes.bind(this);\n    this.blur = this.blur.bind(this);\n    this.beforeChange = this.beforeChange.bind(this);\n    this.mouseDown = (): void => {\n      this.clearAutocomplete();\n      this.tooltipGlassPane.hide();\n    };\n    // @ts-ignore CodeMirror types are wrong.\n    this.codeMirror.on('changes', this.changes);\n    this.lastHintText = '';\n    this.suggestBox = null;\n    this.currentSuggestion = null;\n    this.hintElement = document.createElement('span');\n    this.hintElement.classList.add('auto-complete-text');\n\n    this.tooltipGlassPane = new UI.GlassPane.GlassPane();\n    this.tooltipGlassPane.setSizeBehavior(UI.GlassPane.SizeBehavior.MeasureContent);\n    this.tooltipGlassPane.setOutsideClickCallback(this.tooltipGlassPane.hide.bind(this.tooltipGlassPane));\n    this.tooltipElement = document.createElement('div');\n    this.tooltipElement.classList.add('autocomplete-tooltip');\n    const shadowRoot = UI.Utils.createShadowRootWithCoreStyles(this.tooltipGlassPane.contentElement, {\n      cssFile: 'ui/legacy/components/text_editor/autocompleteTooltip.css',\n      delegatesFocus: undefined,\n    });\n    shadowRoot.appendChild(this.tooltipElement);\n\n    this.queryRange = null;\n  }\n\n  private initializeIfNeeded(): void {\n    if (this.initialized) {\n      return;\n    }\n    this.initialized = true;\n    // @ts-ignore CodeMirror types are wrong.\n    this.codeMirror.on('scroll', this.onScroll);\n    // @ts-ignore CodeMirror types are wrong.\n    this.codeMirror.on('cursorActivity', this.onCursorActivity);\n    // @ts-ignore CodeMirror types are wrong.\n    this.codeMirror.on('mousedown', this.mouseDown);\n    // @ts-ignore CodeMirror types are wrong.\n    this.codeMirror.on('blur', this.blur);\n    if (this.config.isWordChar) {\n      // @ts-ignore CodeMirror types are wrong.\n      this.codeMirror.on('beforeChange', this.beforeChange);\n      this.dictionary = new Common.TextDictionary.TextDictionary();\n      // @ts-ignore CodeMirror types are wrong.\n      this.addWordsFromText(this.codeMirror.getValue());\n    }\n    UI.ARIAUtils.setAutocomplete(this.textEditor.element, UI.ARIAUtils.AutocompleteInteractionModel.both);\n    UI.ARIAUtils.setHasPopup(this.textEditor.element, UI.ARIAUtils.PopupRole.ListBox);\n  }\n\n  dispose(): void {\n    // @ts-ignore CodeMirror types are wrong.\n    this.codeMirror.off('changes', this.changes);\n    if (this.initialized) {\n      // @ts-ignore CodeMirror types are wrong.\n      this.codeMirror.off('scroll', this.onScroll);\n      // @ts-ignore CodeMirror types are wrong.\n      this.codeMirror.off('cursorActivity', this.onCursorActivity);\n      // @ts-ignore CodeMirror types are wrong.\n      this.codeMirror.off('mousedown', this.mouseDown);\n      // @ts-ignore CodeMirror types are wrong.\n      this.codeMirror.off('blur', this.blur);\n    }\n    if (this.dictionary) {\n      // @ts-ignore CodeMirror types are wrong.\n      this.codeMirror.off('beforeChange', this.beforeChange);\n      this.dictionary.reset();\n    }\n    UI.ARIAUtils.clearAutocomplete(this.textEditor.element);\n    UI.ARIAUtils.setHasPopup(this.textEditor.element, UI.ARIAUtils.PopupRole.False);\n  }\n\n  private beforeChange(codeMirror: typeof CodeMirror, changeObject: any): void {\n    this.updatedLines = this.updatedLines || {};\n    for (let i = changeObject.from.line; i <= changeObject.to.line; ++i) {\n      if (this.updatedLines[i] === undefined) {\n        // @ts-ignore CodeMirror types are wrong.\n        this.updatedLines[i] = this.codeMirror.getLine(i);\n      }\n    }\n  }\n\n  private addWordsFromText(text: string): void {\n    TextUtils.TextUtils.Utils.textToWords(\n        text, this.config.isWordChar as (arg0: string) => boolean, addWord.bind(this));\n\n    function addWord(this: TextEditorAutocompleteController, word: string): void {\n      if (this.dictionary && word.length && (word[0] < '0' || word[0] > '9')) {\n        this.dictionary.addWord(word);\n      }\n    }\n  }\n\n  private removeWordsFromText(text: string): void {\n    TextUtils.TextUtils.Utils.textToWords(\n        text, this.config.isWordChar as (arg0: string) => boolean,\n        word => this.dictionary && this.dictionary.removeWord(word));\n  }\n\n  private substituteRange(lineNumber: number, columnNumber: number): TextUtils.TextRange.TextRange|null {\n    let range: TextUtils.TextRange.TextRange|(TextUtils.TextRange.TextRange | null) =\n        this.config.substituteRangeCallback ? this.config.substituteRangeCallback(lineNumber, columnNumber) : null;\n    if (!range && this.config.isWordChar) {\n      range = this.textEditor.wordRangeForCursorPosition(lineNumber, columnNumber, this.config.isWordChar);\n    }\n    return range;\n  }\n\n  private wordsWithQuery(\n      queryRange: TextUtils.TextRange.TextRange, substituteRange: TextUtils.TextRange.TextRange,\n      force?: boolean): Promise<UI.SuggestBox.Suggestions> {\n    const external =\n        this.config.suggestionsCallback ? this.config.suggestionsCallback(queryRange, substituteRange, force) : null;\n    if (external) {\n      return external;\n    }\n\n    if (!this.dictionary || (!force && queryRange.isEmpty())) {\n      return Promise.resolve([]);\n    }\n\n    let completions = this.dictionary.wordsWithPrefix(this.textEditor.text(queryRange));\n    const substituteWord = this.textEditor.text(substituteRange);\n    if (this.dictionary.wordCount(substituteWord) === 1) {\n      completions = completions.filter(word => word !== substituteWord);\n    }\n    const dictionary = this.dictionary;\n    completions.sort((a, b) => dictionary.wordCount(b) - dictionary.wordCount(a) || a.length - b.length);\n    return Promise.resolve(completions.map(item => ({\n                                             text: item,\n                                             title: undefined,\n                                             subtitle: undefined,\n                                             iconType: undefined,\n                                             priority: undefined,\n                                             isSecondary: undefined,\n                                             subtitleRenderer: undefined,\n                                             selectionRange: undefined,\n                                             hideGhostText: undefined,\n                                             iconElement: undefined,\n                                           })));\n  }\n\n  private changes(codeMirror: typeof CodeMirror, changes: any[]): void {\n    if (!changes.length) {\n      return;\n    }\n\n    if (this.dictionary && this.updatedLines) {\n      for (const lineNumber in this.updatedLines) {\n        this.removeWordsFromText(this.updatedLines[lineNumber]);\n      }\n      delete this.updatedLines;\n\n      const linesToUpdate: {\n        [x: string]: string,\n      } = {};\n      for (let changeIndex = 0; changeIndex < changes.length; ++changeIndex) {\n        const changeObject = changes[changeIndex];\n        const editInfo = TextUtils.CodeMirrorUtils.changeObjectToEditOperation(changeObject);\n        for (let i = editInfo.newRange.startLine; i <= editInfo.newRange.endLine; ++i) {\n          // @ts-ignore CodeMirror types are wrong.\n          linesToUpdate[String(i)] = this.codeMirror.getLine(i);\n        }\n      }\n      for (const lineNumber in linesToUpdate) {\n        this.addWordsFromText(linesToUpdate[lineNumber]);\n      }\n    }\n\n    let singleCharInput = false;\n    let singleCharDelete = false;\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this.codeMirror.getCursor('head');\n    for (let changeIndex = 0; changeIndex < changes.length; ++changeIndex) {\n      const changeObject = changes[changeIndex];\n      if (changeObject.origin === '+input' && changeObject.text.length === 1 && changeObject.text[0].length === 1 &&\n          changeObject.to.line === cursor.line && changeObject.to.ch + 1 === cursor.ch) {\n        singleCharInput = true;\n        break;\n      }\n      if (changeObject.origin === '+delete' && changeObject.removed.length === 1 &&\n          changeObject.removed[0].length === 1 && changeObject.to.line === cursor.line &&\n          changeObject.to.ch - 1 === cursor.ch) {\n        singleCharDelete = true;\n        break;\n      }\n    }\n    if (this.queryRange) {\n      if (singleCharInput) {\n        this.queryRange.endColumn++;\n      } else if (singleCharDelete) {\n        this.queryRange.endColumn--;\n      }\n      if (singleCharDelete || singleCharInput) {\n        this.setHint(this.lastHintText);\n      }\n    }\n\n    if (singleCharInput || singleCharDelete) {\n      queueMicrotask(() => {\n        this.autocomplete();\n      });\n    } else {\n      this.clearAutocomplete();\n    }\n  }\n\n  private blur(): void {\n    this.clearAutocomplete();\n  }\n\n  private validateSelectionsContexts(mainSelection: TextUtils.TextRange.TextRange): boolean {\n    // @ts-ignore CodeMirror types are wrong.\n    const selections = this.codeMirror.listSelections();\n    if (selections.length <= 1) {\n      return true;\n    }\n    const mainSelectionContext = this.textEditor.text(mainSelection);\n    for (let i = 0; i < selections.length; ++i) {\n      const wordRange = this.substituteRange(selections[i].head.line, selections[i].head.ch);\n      if (!wordRange) {\n        return false;\n      }\n      const context = this.textEditor.text(wordRange);\n      if (context !== mainSelectionContext) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  autocomplete(force?: boolean): void {\n    this.initializeIfNeeded();\n    // @ts-ignore CodeMirror types are wrong.\n    if (this.codeMirror.somethingSelected()) {\n      this.hideSuggestBox();\n      return;\n    }\n\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this.codeMirror.getCursor('head');\n    const substituteRange = this.substituteRange(cursor.line, cursor.ch);\n    if (!substituteRange || !this.validateSelectionsContexts(substituteRange)) {\n      this.hideSuggestBox();\n      return;\n    }\n\n    const queryRange = substituteRange.clone();\n    queryRange.endColumn = cursor.ch;\n    const query = this.textEditor.text(queryRange);\n    let hadSuggestBox = false;\n    if (this.suggestBox) {\n      hadSuggestBox = true;\n    }\n    this.wordsWithQuery(queryRange, substituteRange, force).then(wordsWithQuery => {\n      return wordsAcquired(wordsWithQuery);\n    });\n\n    const wordsAcquired = (wordsWithQuery: UI.SuggestBox.Suggestions): void => {\n      if (!wordsWithQuery.length || (wordsWithQuery.length === 1 && query === wordsWithQuery[0].text) ||\n          (!this.suggestBox && hadSuggestBox)) {\n        this.hideSuggestBox();\n        this.onSuggestionsShownForTest([]);\n        return;\n      }\n      if (!this.suggestBox) {\n        this.suggestBox = new UI.SuggestBox.SuggestBox(this, 20);\n        if (this.config.anchorBehavior) {\n          this.suggestBox.setAnchorBehavior(this.config.anchorBehavior);\n        }\n      }\n\n      const oldQueryRange = this.queryRange;\n      this.queryRange = queryRange;\n      if (!oldQueryRange || queryRange.startLine !== oldQueryRange.startLine ||\n          queryRange.startColumn !== oldQueryRange.startColumn) {\n        this.updateAnchorBox();\n      }\n      this.anchorBox &&\n          this.suggestBox.updateSuggestions(this.anchorBox, wordsWithQuery, true, !this.isCursorAtEndOfLine(), query);\n      if (this.suggestBox.visible()) {\n        this.tooltipGlassPane.hide();\n      }\n      this.onSuggestionsShownForTest(wordsWithQuery);\n    };\n  }\n\n  private setHint(hint: string): void {\n    if (this.queryRange === null) {\n      return;\n    }\n    const query = this.textEditor.text(this.queryRange);\n    if (!hint || !this.isCursorAtEndOfLine() || !hint.startsWith(query)) {\n      this.clearHint();\n      return;\n    }\n    const suffix = hint.substring(query.length).split('\\n')[0];\n    this.hintElement.textContent = Platform.StringUtilities.trimEndWithMaxLength(suffix, 10000);\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this.codeMirror.getCursor('to');\n    if (this.hintMarker) {\n      const position = this.hintMarker.position();\n      if (!position || !position.equal(TextUtils.TextRange.TextRange.createFromLocation(cursor.line, cursor.ch))) {\n        this.hintMarker.clear();\n        this.hintMarker = null;\n      }\n    }\n\n    if (!this.hintMarker) {\n      this.hintMarker = this.textEditor.addBookmark(\n          cursor.line, cursor.ch, this.hintElement as HTMLElement, TextEditorAutocompleteController.HintBookmark, true);\n    } else if (this.lastHintText !== hint) {\n      this.hintMarker.refresh();\n    }\n    this.lastHintText = hint;\n  }\n\n  private clearHint(): void {\n    if (!this.hintElement.textContent) {\n      return;\n    }\n    this.lastHintText = '';\n    this.hintElement.textContent = '';\n    if (this.hintMarker) {\n      this.hintMarker.refresh();\n    }\n  }\n\n  private onSuggestionsShownForTest(_suggestions: UI.SuggestBox.Suggestions): void {\n  }\n\n  private onSuggestionsHiddenForTest(): void {\n  }\n\n  clearAutocomplete(): void {\n    this.tooltipGlassPane.hide();\n    this.hideSuggestBox();\n  }\n\n  private hideSuggestBox(): void {\n    if (!this.suggestBox) {\n      return;\n    }\n    this.suggestBox.hide();\n    this.suggestBox = null;\n    this.queryRange = null;\n    this.anchorBox = null;\n    this.currentSuggestion = null;\n    this.textEditor.dispatchEventToListeners(UI.TextEditor.Events.SuggestionChanged);\n    this.clearHint();\n    this.onSuggestionsHiddenForTest();\n  }\n\n  keyDown(event: KeyboardEvent): boolean {\n    if (this.tooltipGlassPane.isShowing() && event.keyCode === UI.KeyboardShortcut.Keys.Esc.code) {\n      this.tooltipGlassPane.hide();\n      return true;\n    }\n    if (!this.suggestBox) {\n      return false;\n    }\n    switch (event.keyCode) {\n      case UI.KeyboardShortcut.Keys.Tab.code:\n        this.suggestBox.acceptSuggestion();\n        this.clearAutocomplete();\n        return true;\n      case UI.KeyboardShortcut.Keys.End.code:\n      case UI.KeyboardShortcut.Keys.Right.code:\n        if (this.isCursorAtEndOfLine()) {\n          this.suggestBox.acceptSuggestion();\n          this.clearAutocomplete();\n          return true;\n        }\n        this.clearAutocomplete();\n        return false;\n      case UI.KeyboardShortcut.Keys.Left.code:\n      case UI.KeyboardShortcut.Keys.Home.code:\n        this.clearAutocomplete();\n        return false;\n      case UI.KeyboardShortcut.Keys.Esc.code:\n        this.clearAutocomplete();\n        return true;\n    }\n    return this.suggestBox.keyPressed(event);\n  }\n\n  private isCursorAtEndOfLine(): boolean {\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this.codeMirror.getCursor('to');\n    // @ts-ignore CodeMirror types are wrong.\n    return cursor.ch === this.codeMirror.getLine(cursor.line).length;\n  }\n\n  applySuggestion(suggestion: UI.SuggestBox.Suggestion|null, _isIntermediateSuggestion?: boolean): void {\n    const oldSuggestion = this.currentSuggestion;\n    this.currentSuggestion = suggestion;\n    this.setHint(suggestion ? suggestion.text : '');\n    if ((oldSuggestion ? oldSuggestion.text : '') !== (suggestion ? suggestion.text : '')) {\n      this.textEditor.dispatchEventToListeners(UI.TextEditor.Events.SuggestionChanged);\n    }\n  }\n\n  acceptSuggestion(): void {\n    if (this.currentSuggestion === null || this.queryRange === null) {\n      return;\n    }\n    // @ts-ignore CodeMirror types are wrong.\n    const selections = this.codeMirror.listSelections().slice();\n    const queryLength = this.queryRange.endColumn - this.queryRange.startColumn;\n    const suggestion = this.currentSuggestion.text;\n    // @ts-ignore CodeMirror types are wrong.\n    this.codeMirror.operation(() => {\n      for (let i = selections.length - 1; i >= 0; --i) {\n        const start = selections[i].head;\n        const end = new CodeMirror.Pos(start.line, start.ch - queryLength);\n        // @ts-ignore CodeMirror types are wrong.\n        this.codeMirror.replaceRange(suggestion, start, end, '+autocomplete');\n      }\n    });\n  }\n\n  ariaControlledBy(): Element {\n    return this.textEditor.element;\n  }\n\n  textWithCurrentSuggestion(): string {\n    if (!this.queryRange || this.currentSuggestion === null) {\n      // @ts-ignore CodeMirror types are wrong.\n      return this.codeMirror.getValue();\n    }\n\n    // @ts-ignore CodeMirror types are wrong.\n    const selections = this.codeMirror.listSelections().slice();\n    let last: {\n      line: any,\n      column: any,\n    }|{\n      line: number,\n      column: number,\n    } = {line: 0, column: 0};\n    let text = '';\n    const queryLength = this.queryRange.endColumn - this.queryRange.startColumn;\n    for (const selection of selections) {\n      const range = new TextUtils.TextRange.TextRange(\n          last.line, last.column, selection.head.line, selection.head.ch - queryLength);\n      text += this.textEditor.text(range);\n      text += this.currentSuggestion.text;\n      last = {line: selection.head.line, column: selection.head.ch};\n    }\n    const range = new TextUtils.TextRange.TextRange(last.line, last.column, Infinity, Infinity);\n    text += this.textEditor.text(range);\n    return text;\n  }\n\n  private onScroll(): void {\n    this.tooltipGlassPane.hide();\n    if (!this.suggestBox) {\n      return;\n    }\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this.codeMirror.getCursor();\n    // @ts-ignore CodeMirror types are wrong.\n    const scrollInfo = this.codeMirror.getScrollInfo();\n    // @ts-ignore CodeMirror types are wrong.\n    const topmostLineNumber = this.codeMirror.lineAtHeight(scrollInfo.top, 'local');\n    // @ts-ignore CodeMirror types are wrong.\n    const bottomLine = this.codeMirror.lineAtHeight(scrollInfo.top + scrollInfo.clientHeight, 'local');\n    if (cursor.line < topmostLineNumber || cursor.line > bottomLine) {\n      this.clearAutocomplete();\n    } else {\n      this.updateAnchorBox();\n      this.anchorBox && this.suggestBox.setPosition(this.anchorBox);\n    }\n  }\n\n  private async updateTooltip(): Promise<void> {\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this.codeMirror.getCursor();\n    const tooltip = this.config.tooltipCallback ? await this.config.tooltipCallback(cursor.line, cursor.ch) : null;\n    // @ts-ignore CodeMirror types are wrong.\n    const newCursor = this.codeMirror.getCursor();\n\n    if (newCursor.line !== cursor.line && newCursor.ch !== cursor.ch) {\n      return;\n    }\n    if (this.suggestBox && this.suggestBox.visible) {\n      return;\n    }\n\n    if (!tooltip) {\n      this.tooltipGlassPane.hide();\n      return;\n    }\n    const metrics = this.textEditor.cursorPositionToCoordinates(cursor.line, cursor.ch);\n    if (!metrics) {\n      this.tooltipGlassPane.hide();\n      return;\n    }\n\n    this.tooltipGlassPane.setContentAnchorBox(new AnchorBox(metrics.x, metrics.y, 0, metrics.height));\n    this.tooltipElement.removeChildren();\n    this.tooltipElement.appendChild(tooltip);\n    this.tooltipGlassPane.show(this.textEditor.element.ownerDocument as Document);\n  }\n\n  private onCursorActivity(): void {\n    this.updateTooltip();\n    if (!this.suggestBox || this.queryRange === null) {\n      return;\n    }\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this.codeMirror.getCursor();\n    let shouldCloseAutocomplete: boolean =\n        !(cursor.line === this.queryRange.startLine && this.queryRange.startColumn <= cursor.ch &&\n          cursor.ch <= this.queryRange.endColumn);\n    // Try not to hide autocomplete when user types in.\n    if (cursor.line === this.queryRange.startLine && cursor.ch === this.queryRange.endColumn + 1) {\n      // @ts-ignore CodeMirror types are wrong.\n      const line = this.codeMirror.getLine(cursor.line);\n      shouldCloseAutocomplete = this.config.isWordChar ? !this.config.isWordChar(line.charAt(cursor.ch - 1)) : false;\n    }\n    if (shouldCloseAutocomplete) {\n      this.clearAutocomplete();\n    }\n    this.onCursorActivityHandledForTest();\n  }\n\n  private onCursorActivityHandledForTest(): void {\n  }\n\n  private updateAnchorBox(): void {\n    if (this.queryRange === null) {\n      return;\n    }\n    const line = this.queryRange.startLine;\n    const column = this.queryRange.startColumn;\n    const metrics = this.textEditor.cursorPositionToCoordinates(line, column);\n    this.anchorBox = metrics ? new AnchorBox(metrics.x, metrics.y, 0, metrics.height) : null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly HintBookmark = Symbol('hint');\n}\n"]}