{"version":3,"file":"SourceCodeDiff.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/source_frame/SourceCodeDiff.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Diff from '../../../../third_party/diff/diff.js';\nimport type * as TextEditor from '../text_editor/text_editor.js';\nimport type {SourcesTextEditor} from './SourcesTextEditor.js';\n\nexport class SourceCodeDiff {\n  private readonly textEditor: SourcesTextEditor;\n  private animatedLines: TextEditor.CodeMirrorTextEditor.TextEditorPositionHandle[];\n  private animationTimeout: number|null;\n  constructor(textEditor: SourcesTextEditor) {\n    this.textEditor = textEditor;\n    this.animatedLines = [];\n    this.animationTimeout = null;\n  }\n\n  highlightModifiedLines(oldContent: string|null, newContent: string|null): void {\n    if (typeof oldContent !== 'string' || typeof newContent !== 'string') {\n      return;\n    }\n\n    const diff =\n        SourceCodeDiff.computeDiff(Diff.Diff.DiffWrapper.lineDiff(oldContent.split('\\n'), newContent.split('\\n')));\n    const changedLines = [];\n    for (let i = 0; i < diff.length; ++i) {\n      const diffEntry = diff[i];\n      if (diffEntry.type === EditType.Delete) {\n        continue;\n      }\n      for (let lineNumber = diffEntry.from; lineNumber < diffEntry.to; ++lineNumber) {\n        const position = this.textEditor.textEditorPositionHandle(lineNumber, 0);\n        if (position) {\n          changedLines.push(position);\n        }\n      }\n    }\n    this.updateHighlightedLines(changedLines);\n    this.animationTimeout = window.setTimeout(\n        this.updateHighlightedLines.bind(this, []), 400);  // // Keep this timeout in sync with sourcesView.css.\n  }\n\n  private updateHighlightedLines(newLines: TextEditor.CodeMirrorTextEditor.TextEditorPositionHandle[]): void {\n    if (this.animationTimeout) {\n      clearTimeout(this.animationTimeout);\n    }\n    this.animationTimeout = null;\n    this.textEditor.operation(operation.bind(this));\n\n    function operation(this: SourceCodeDiff): void {\n      toggleLines.call(this, false);\n      this.animatedLines = newLines;\n      toggleLines.call(this, true);\n    }\n\n    function toggleLines(this: SourceCodeDiff, value: boolean): void {\n      for (let i = 0; i < this.animatedLines.length; ++i) {\n        const location = this.animatedLines[i].resolve();\n        if (location) {\n          this.textEditor.toggleLineClass(location.lineNumber, 'highlight-line-modification', value);\n        }\n      }\n    }\n  }\n\n  static computeDiff(diff: Diff.Diff.DiffArray): {\n    type: EditType,\n    from: number,\n    to: number,\n  }[] {\n    const result: {\n      type: EditType,\n      from: number,\n      to: number,\n    }[] = [];\n    let hasAdded = false;\n    let hasRemoved = false;\n    let blockStartLineNumber = 0;\n    let currentLineNumber = 0;\n    let isInsideBlock = false;\n    for (let i = 0; i < diff.length; ++i) {\n      const token = diff[i];\n      if (token[0] === Diff.Diff.Operation.Equal) {\n        if (isInsideBlock) {\n          flush();\n        }\n        currentLineNumber += token[1].length;\n        continue;\n      }\n\n      if (!isInsideBlock) {\n        isInsideBlock = true;\n        blockStartLineNumber = currentLineNumber;\n      }\n\n      if (token[0] === Diff.Diff.Operation.Delete) {\n        hasRemoved = true;\n      } else {\n        currentLineNumber += token[1].length;\n        hasAdded = true;\n      }\n    }\n    if (isInsideBlock) {\n      flush();\n    }\n    if (result.length > 1 && result[0].from === 0 && result[1].from === 0) {\n      const merged = {type: EditType.Modify, from: 0, to: result[1].to};\n      result.splice(0, 2, merged);\n    }\n    return result;\n\n    function flush(): void {\n      let type = EditType.Insert;\n      let from = blockStartLineNumber;\n      let to: 1|number = currentLineNumber;\n      if (hasAdded && hasRemoved) {\n        type = EditType.Modify;\n      } else if (!hasAdded && hasRemoved && from === 0 && to === 0) {\n        type = EditType.Modify;\n        to = 1;\n      } else if (!hasAdded && hasRemoved) {\n        type = EditType.Delete;\n        from -= 1;\n      }\n      result.push({type: type, from: from, to: to});\n      isInsideBlock = false;\n      hasAdded = false;\n      hasRemoved = false;\n    }\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum EditType {\n  Insert = 'Insert',\n  Delete = 'Delete',\n  Modify = 'Modify',\n}\n"]}