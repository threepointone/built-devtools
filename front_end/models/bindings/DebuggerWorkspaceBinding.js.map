{"version":3,"file":"DebuggerWorkspaceBinding.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/DebuggerWorkspaceBinding.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Workspace from '../workspace/workspace.js';\n\nimport {CompilerScriptMapping} from './CompilerScriptMapping.js';\nimport {DebuggerLanguagePluginManager} from './DebuggerLanguagePlugins.js';\nimport {DefaultScriptMapping} from './DefaultScriptMapping.js';\nimport {IgnoreListManager} from './IgnoreListManager.js';\nimport type {LiveLocation, LiveLocationPool} from './LiveLocation.js';\nimport {LiveLocationWithPool} from './LiveLocation.js';\nimport {ResourceMapping} from './ResourceMapping.js';\nimport type {ResourceScriptFile} from './ResourceScriptMapping.js';\nimport {ResourceScriptMapping} from './ResourceScriptMapping.js';\n\nlet debuggerWorkspaceBindingInstance: DebuggerWorkspaceBinding|undefined;\n\nexport class DebuggerWorkspaceBinding implements SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  readonly workspace: Workspace.Workspace.WorkspaceImpl;\n  private readonly sourceMappings: DebuggerSourceMapping[];\n  private readonly debuggerModelToData: Map<SDK.DebuggerModel.DebuggerModel, ModelData>;\n  private readonly liveLocationPromises: Set<Promise<void|Location|StackTraceTopFrameLocation|null>>;\n  pluginManager: DebuggerLanguagePluginManager|null;\n  private constructor(targetManager: SDK.TargetManager.TargetManager, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.workspace = workspace;\n\n    this.sourceMappings = [];\n\n    this.debuggerModelToData = new Map();\n    targetManager.addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this);\n    targetManager.addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerResumed, this.debuggerResumed, this);\n    targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n\n    this.liveLocationPromises = new Set();\n\n    this.pluginManager = Root.Runtime.experiments.isEnabled('wasmDWARFDebugging') ?\n        new DebuggerLanguagePluginManager(targetManager, workspace, this) :\n        null;\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    targetManager: SDK.TargetManager.TargetManager|null,\n    workspace: Workspace.Workspace.WorkspaceImpl|null,\n  } = {forceNew: null, targetManager: null, workspace: null}): DebuggerWorkspaceBinding {\n    const {forceNew, targetManager, workspace} = opts;\n    if (!debuggerWorkspaceBindingInstance || forceNew) {\n      if (!targetManager || !workspace) {\n        throw new Error(`Unable to create DebuggerWorkspaceBinding: targetManager and workspace must be provided: ${\n            new Error().stack}`);\n      }\n\n      debuggerWorkspaceBindingInstance = new DebuggerWorkspaceBinding(targetManager, workspace);\n    }\n\n    return debuggerWorkspaceBindingInstance;\n  }\n\n  static removeInstance(): void {\n    debuggerWorkspaceBindingInstance = undefined;\n  }\n\n  addSourceMapping(sourceMapping: DebuggerSourceMapping): void {\n    this.sourceMappings.push(sourceMapping);\n  }\n\n  private async computeAutoStepRanges(mode: SDK.DebuggerModel.StepMode, callFrame: SDK.DebuggerModel.CallFrame):\n      Promise<{\n        start: SDK.DebuggerModel.Location,\n        end: SDK.DebuggerModel.Location,\n      }[]> {\n    function contained(location: SDK.DebuggerModel.Location, range: {\n      start: SDK.DebuggerModel.Location,\n      end: SDK.DebuggerModel.Location,\n    }): boolean {\n      const {start, end} = range;\n      if (start.scriptId !== location.scriptId) {\n        return false;\n      }\n      if (location.lineNumber < start.lineNumber || location.lineNumber > end.lineNumber) {\n        return false;\n      }\n      if (location.lineNumber === start.lineNumber && location.columnNumber < start.columnNumber) {\n        return false;\n      }\n      if (location.lineNumber === end.lineNumber && location.columnNumber >= end.columnNumber) {\n        return false;\n      }\n      return true;\n    }\n\n    // TODO(crbug.com/1018234): Also take into account source maps here and remove the auto-stepping\n    // logic in the front-end (which is currently still an experiment) completely.\n    const pluginManager = this.pluginManager;\n    if (pluginManager) {\n      const rawLocation = callFrame.location();\n      if (mode === SDK.DebuggerModel.StepMode.StepOut) {\n        // Step out of inline function.\n        return await pluginManager.getInlinedFunctionRanges(rawLocation);\n      }\n      let ranges: {\n        start: SDK.DebuggerModel.Location,\n        end: SDK.DebuggerModel.Location,\n      }[]|{\n        start: SDK.DebuggerModel.Location,\n        end: SDK.DebuggerModel.Location,\n      }[] = [];\n      const uiLocation = await pluginManager.rawLocationToUILocation(rawLocation);\n      if (uiLocation) {\n        ranges = await pluginManager.uiLocationToRawLocationRanges(\n                     uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber) ||\n            [];\n        // TODO(bmeurer): Remove the {rawLocation} from the {ranges}?\n        ranges = ranges.filter(range => contained(rawLocation, range));\n      }\n      if (mode === SDK.DebuggerModel.StepMode.StepOver) {\n        // Step over an inlined function.\n        ranges = ranges.concat(await pluginManager.getInlinedCalleesRanges(rawLocation));\n      }\n      return ranges;\n    }\n    return [];\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    this.debuggerModelToData.set(debuggerModel, new ModelData(debuggerModel, this));\n    debuggerModel.setComputeAutoStepRangesCallback(this.computeAutoStepRanges.bind(this));\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.setComputeAutoStepRangesCallback(null);\n    const modelData = this.debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.dispose();\n      this.debuggerModelToData.delete(debuggerModel);\n    }\n  }\n\n  /**\n   * The promise returned by this function is resolved once all *currently*\n   * pending LiveLocations are processed.\n   */\n  async pendingLiveLocationChangesPromise(): Promise<void|Location|StackTraceTopFrameLocation|null> {\n    await Promise.all(this.liveLocationPromises);\n  }\n\n  private recordLiveLocationChange(promise: Promise<void|Location|StackTraceTopFrameLocation|null>): void {\n    promise.then(() => {\n      this.liveLocationPromises.delete(promise);\n    });\n    this.liveLocationPromises.add(promise);\n  }\n\n  async updateLocations(script: SDK.Script.Script): Promise<void> {\n    const modelData = this.debuggerModelToData.get(script.debuggerModel);\n    if (modelData) {\n      const updatePromise = modelData.updateLocations(script);\n      this.recordLiveLocationChange(updatePromise);\n      await updatePromise;\n    }\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location|null> {\n    const modelData = this.debuggerModelToData.get(rawLocation.debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    const liveLocationPromise = modelData.createLiveLocation(rawLocation, updateDelegate, locationPool);\n    this.recordLiveLocationChange(liveLocationPromise);\n    return liveLocationPromise;\n  }\n\n  async createStackTraceTopFrameLiveLocation(\n      rawLocations: SDK.DebuggerModel.Location[], updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    console.assert(rawLocations.length > 0);\n    const locationPromise =\n        StackTraceTopFrameLocation.createStackTraceTopFrameLocation(rawLocations, this, updateDelegate, locationPool);\n    this.recordLiveLocationChange(locationPromise);\n    return locationPromise;\n  }\n\n  async createCallFrameLiveLocation(\n      location: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location|null> {\n    const script = location.script();\n    if (!script) {\n      return null;\n    }\n    const debuggerModel = location.debuggerModel;\n    const liveLocationPromise = this.createLiveLocation(location, updateDelegate, locationPool);\n    this.recordLiveLocationChange(liveLocationPromise);\n    const liveLocation = await liveLocationPromise;\n    if (!liveLocation) {\n      return null;\n    }\n    this.registerCallFrameLiveLocation(debuggerModel, liveLocation);\n    return liveLocation;\n  }\n\n  async rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location):\n      Promise<Workspace.UISourceCode.UILocation|null> {\n    for (const sourceMapping of this.sourceMappings) {\n      const uiLocation = sourceMapping.rawLocationToUILocation(rawLocation);\n      if (uiLocation) {\n        return uiLocation;\n      }\n    }\n    if (this.pluginManager) {\n      const uiLocation = await this.pluginManager.rawLocationToUILocation(rawLocation);\n      if (uiLocation) {\n        return uiLocation;\n      }\n    }\n    const modelData = this.debuggerModelToData.get(rawLocation.debuggerModel);\n    return modelData ? modelData.rawLocationToUILocation(rawLocation) : null;\n  }\n\n  uiSourceCodeForSourceMapSourceURL(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, url: string,\n      isContentScript: boolean): Workspace.UISourceCode.UISourceCode|null {\n    const modelData = this.debuggerModelToData.get(debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    return modelData.compilerMapping.uiSourceCodeForURL(url, isContentScript);\n  }\n\n  async uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): Promise<SDK.DebuggerModel.Location[]> {\n    for (const sourceMapping of this.sourceMappings) {\n      const locations = sourceMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n      if (locations.length) {\n        return locations;\n      }\n    }\n    const locations = await this.pluginManager?.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    if (locations) {\n      return locations;\n    }\n    for (const modelData of this.debuggerModelToData.values()) {\n      const locations = modelData.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n      if (locations.length) {\n        return locations;\n      }\n    }\n    return [];\n  }\n\n  uiLocationToRawLocationsForUnformattedJavaScript(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number): SDK.DebuggerModel.Location[] {\n    console.assert(uiSourceCode.contentType().isScript());\n    const locations = [];\n    for (const modelData of this.debuggerModelToData.values()) {\n      locations.push(...modelData.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber));\n    }\n    return locations;\n  }\n\n  async normalizeUILocation(uiLocation: Workspace.UISourceCode.UILocation): Promise<Workspace.UISourceCode.UILocation> {\n    const rawLocations =\n        await this.uiLocationToRawLocations(uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber);\n    for (const location of rawLocations) {\n      const uiLocationCandidate = await this.rawLocationToUILocation(location);\n      if (uiLocationCandidate) {\n        return uiLocationCandidate;\n      }\n    }\n    return uiLocation;\n  }\n\n  scriptFile(uiSourceCode: Workspace.UISourceCode.UISourceCode, debuggerModel: SDK.DebuggerModel.DebuggerModel):\n      ResourceScriptFile|null {\n    const modelData = this.debuggerModelToData.get(debuggerModel);\n    return modelData ? modelData.getResourceMapping().scriptFile(uiSourceCode) : null;\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    const scripts = new Set<SDK.Script.Script>();\n    if (this.pluginManager) {\n      this.pluginManager.scriptsForUISourceCode(uiSourceCode).forEach(script => scripts.add(script));\n    }\n    for (const modelData of this.debuggerModelToData.values()) {\n      const resourceScriptFile = modelData.getResourceMapping().scriptFile(uiSourceCode);\n      if (resourceScriptFile && resourceScriptFile.script) {\n        scripts.add(resourceScriptFile.script);\n      }\n      modelData.compilerMapping.scriptsForUISourceCode(uiSourceCode).forEach(script => scripts.add(script));\n    }\n    return [...scripts];\n  }\n\n  scriptsForResource(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    const scripts = new Set<SDK.Script.Script>();\n    for (const modelData of this.debuggerModelToData.values()) {\n      const resourceScriptFile = modelData.getResourceMapping().scriptFile(uiSourceCode);\n      if (resourceScriptFile && resourceScriptFile.script) {\n        scripts.add(resourceScriptFile.script);\n      }\n    }\n    return [...scripts];\n  }\n\n  supportsConditionalBreakpoints(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    // DevTools traditionally supported (JavaScript) conditions\n    // for breakpoints everywhere, so we keep that behavior...\n    if (!this.pluginManager) {\n      return true;\n    }\n    const scripts = this.pluginManager.scriptsForUISourceCode(uiSourceCode);\n    return scripts.every(script => script.isJavaScript());\n  }\n\n  sourceMapForScript(script: SDK.Script.Script): SDK.SourceMap.SourceMap|null {\n    const modelData = this.debuggerModelToData.get(script.debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    return modelData.compilerMapping.sourceMapForScript(script);\n  }\n\n  private globalObjectCleared(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    this.reset(event.data);\n  }\n\n  private reset(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    const modelData = this.debuggerModelToData.get(debuggerModel);\n    if (!modelData) {\n      return;\n    }\n    for (const location of modelData.callFrameLocations.values()) {\n      this.removeLiveLocation(location);\n    }\n    modelData.callFrameLocations.clear();\n  }\n\n  private resetForTest(target: SDK.Target.Target): void {\n    const debuggerModel = (target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel);\n    const modelData = this.debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.getResourceMapping().resetForTest();\n    }\n  }\n\n  private registerCallFrameLiveLocation(debuggerModel: SDK.DebuggerModel.DebuggerModel, location: Location): void {\n    const modelData = this.debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      const locations = modelData.callFrameLocations;\n      locations.add(location);\n    }\n  }\n\n  removeLiveLocation(location: Location): void {\n    const modelData = this.debuggerModelToData.get(location.rawLocation.debuggerModel);\n    if (modelData) {\n      modelData.disposeLocation(location);\n    }\n  }\n\n  private debuggerResumed(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    this.reset(event.data);\n  }\n}\n\nclass ModelData {\n  private readonly debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  private readonly debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  callFrameLocations: Set<Location>;\n  private defaultMapping: DefaultScriptMapping;\n  resourceMapping: ResourceScriptMapping;\n  readonly compilerMapping: CompilerScriptMapping;\n  private readonly locations: Platform.MapUtilities.Multimap<string, Location>;\n  constructor(debuggerModel: SDK.DebuggerModel.DebuggerModel, debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.debuggerModel = debuggerModel;\n    this.debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.callFrameLocations = new Set();\n\n    const workspace = debuggerWorkspaceBinding.workspace;\n    this.defaultMapping = new DefaultScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n    this.resourceMapping = new ResourceScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n    this.compilerMapping = new CompilerScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n\n    this.locations = new Platform.MapUtilities.Multimap();\n\n    debuggerModel.setBeforePausedCallback(this.beforePaused.bind(this));\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location> {\n    console.assert(rawLocation.scriptId !== '');\n    const scriptId = rawLocation.scriptId;\n    const location = new Location(scriptId, rawLocation, this.debuggerWorkspaceBinding, updateDelegate, locationPool);\n    this.locations.set(scriptId, location);\n    await location.update();\n    return location;\n  }\n\n  disposeLocation(location: Location): void {\n    this.locations.delete(location.scriptId, location);\n  }\n\n  async updateLocations(script: SDK.Script.Script): Promise<void> {\n    const promises = [];\n    for (const location of this.locations.get(script.scriptId)) {\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    let uiLocation = this.compilerMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.resourceMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || ResourceMapping.instance().jsLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.defaultMapping.rawLocationToUILocation(rawLocation);\n    return /** @type {!Workspace.UISourceCode.UILocation} */ uiLocation as Workspace.UISourceCode.UILocation;\n  }\n\n  uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number|undefined = 0): SDK.DebuggerModel.Location[] {\n    // TODO(crbug.com/1153123): Revisit the `columnNumber = 0` and also preserve `undefined` for source maps?\n    let locations = this.compilerMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        this.resourceMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        ResourceMapping.instance().uiLocationToJSLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ? locations :\n                                   this.defaultMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    return locations;\n  }\n\n  private beforePaused(debuggerPausedDetails: SDK.DebuggerModel.DebuggerPausedDetails): boolean {\n    const callFrame = debuggerPausedDetails.callFrames[0];\n    if (!callFrame) {\n      return false;\n    }\n    if (!Root.Runtime.experiments.isEnabled('emptySourceMapAutoStepping')) {\n      return true;\n    }\n    return Boolean(this.compilerMapping.mapsToSourceCode(callFrame.location()));\n  }\n\n  dispose(): void {\n    this.debuggerModel.setBeforePausedCallback(null);\n    this.compilerMapping.dispose();\n    this.resourceMapping.dispose();\n    this.defaultMapping.dispose();\n  }\n\n  getResourceMapping(): ResourceScriptMapping {\n    return this.resourceMapping;\n  }\n}\n\nexport class Location extends LiveLocationWithPool {\n  readonly scriptId: string;\n  readonly rawLocation: SDK.DebuggerModel.Location;\n  private readonly binding: DebuggerWorkspaceBinding;\n\n  constructor(\n      scriptId: string, rawLocation: SDK.DebuggerModel.Location, binding: DebuggerWorkspaceBinding,\n      updateDelegate: (arg0: LiveLocation) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.scriptId = scriptId;\n    this.rawLocation = rawLocation;\n    this.binding = binding;\n  }\n\n  async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    const debuggerModelLocation = this.rawLocation;\n    return this.binding.rawLocationToUILocation(debuggerModelLocation);\n  }\n\n  dispose(): void {\n    super.dispose();\n    this.binding.removeLiveLocation(this);\n  }\n\n  async isIgnoreListed(): Promise<boolean> {\n    const uiLocation = await this.uiLocation();\n    return uiLocation ? IgnoreListManager.instance().isIgnoreListedUISourceCode(uiLocation.uiSourceCode) : false;\n  }\n}\n\nclass StackTraceTopFrameLocation extends LiveLocationWithPool {\n  private updateScheduled: boolean;\n  private current: LiveLocation|null;\n  private locations: LiveLocation[]|null;\n  constructor(updateDelegate: (arg0: LiveLocation) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.updateScheduled = true;\n    this.current = null;\n    this.locations = null;\n  }\n\n  static async createStackTraceTopFrameLocation(\n      rawLocations: SDK.DebuggerModel.Location[], binding: DebuggerWorkspaceBinding,\n      updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<StackTraceTopFrameLocation> {\n    const location = new StackTraceTopFrameLocation(updateDelegate, locationPool);\n    const locationsPromises = rawLocations.map(\n        rawLocation => binding.createLiveLocation(rawLocation, location.scheduleUpdate.bind(location), locationPool));\n    location.locations = ((await Promise.all(locationsPromises)).filter(l => Boolean(l)) as Location[]);\n    await location.updateLocation();\n    return location;\n  }\n\n  async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    return this.current ? this.current.uiLocation() : null;\n  }\n\n  async isIgnoreListed(): Promise<boolean> {\n    return this.current ? this.current.isIgnoreListed() : false;\n  }\n\n  dispose(): void {\n    super.dispose();\n    if (this.locations) {\n      for (const location of this.locations) {\n        location.dispose();\n      }\n    }\n    this.locations = null;\n    this.current = null;\n  }\n\n  private async scheduleUpdate(): Promise<void> {\n    if (this.updateScheduled) {\n      return;\n    }\n    this.updateScheduled = true;\n    queueMicrotask(() => {\n      this.updateLocation();\n    });\n  }\n\n  private async updateLocation(): Promise<void> {\n    this.updateScheduled = false;\n    if (!this.locations || this.locations.length === 0) {\n      return;\n    }\n\n    this.current = this.locations[0];\n    for (const location of this.locations) {\n      if (!(await location.isIgnoreListed())) {\n        this.current = location;\n        break;\n      }\n    }\n    this.update();\n  }\n}\n\n/**\n * @interface\n */\nexport interface DebuggerSourceMapping {\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null;\n\n  uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): SDK.DebuggerModel.Location[];\n}\n"]}