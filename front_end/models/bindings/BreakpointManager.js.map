{"version":3,"file":"BreakpointManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/BreakpointManager.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport type {LiveLocation} from './LiveLocation.js';\nimport {LiveLocationPool} from './LiveLocation.js';\n\nlet breakpointManagerInstance: BreakpointManager;\n\nexport class BreakpointManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  readonly storage: Storage;\n  private readonly workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly targetManager: SDK.TargetManager.TargetManager;\n  readonly debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  private readonly breakpointsForUISourceCode:\n      Map<Workspace.UISourceCode.UISourceCode, Map<string, BreakpointLocation>>;\n  private readonly breakpointByStorageId: Map<string, Breakpoint>;\n\n  private constructor(\n      targetManager: SDK.TargetManager.TargetManager, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    super();\n    this.storage = new Storage();\n    this.workspace = workspace;\n    this.targetManager = targetManager;\n    this.debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.breakpointsForUISourceCode = new Map();\n    this.breakpointByStorageId = new Map();\n\n    this.workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, this.uiSourceCodeAdded, this);\n    this.workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved, this.uiSourceCodeRemoved, this);\n    this.workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this.projectRemoved, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    targetManager: SDK.TargetManager.TargetManager|null,\n    workspace: Workspace.Workspace.WorkspaceImpl|null,\n    debuggerWorkspaceBinding: DebuggerWorkspaceBinding|null,\n  } = {forceNew: null, targetManager: null, workspace: null, debuggerWorkspaceBinding: null}): BreakpointManager {\n    const {forceNew, targetManager, workspace, debuggerWorkspaceBinding} = opts;\n    if (!breakpointManagerInstance || forceNew) {\n      if (!targetManager || !workspace || !debuggerWorkspaceBinding) {\n        throw new Error(\n            `Unable to create settings: targetManager, workspace, and debuggerWorkspaceBinding must be provided: ${\n                new Error().stack}`);\n      }\n\n      breakpointManagerInstance = new BreakpointManager(targetManager, workspace, debuggerWorkspaceBinding);\n    }\n\n    return breakpointManagerInstance;\n  }\n\n  static breakpointStorageId(url: string, lineNumber: number, columnNumber?: number): string {\n    if (!url) {\n      return '';\n    }\n    return `${url}:${lineNumber}` + (typeof columnNumber === 'number' ? `:${columnNumber}` : '');\n  }\n\n  async copyBreakpoints(fromURL: string, toSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const breakpointItems = this.storage.breakpointItems(fromURL);\n    for (const item of breakpointItems) {\n      await this.setBreakpoint(toSourceCode, item.lineNumber, item.columnNumber, item.condition, item.enabled);\n    }\n  }\n\n  private restoreBreakpoints(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const url = uiSourceCode.url();\n    if (!url) {\n      return;\n    }\n\n    this.storage.mute();\n    const breakpointItems = this.storage.breakpointItems(url);\n    for (const item of breakpointItems) {\n      this.innerSetBreakpoint(uiSourceCode, item.lineNumber, item.columnNumber, item.condition, item.enabled);\n    }\n    this.storage.unmute();\n  }\n\n  private uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.restoreBreakpoints(uiSourceCode);\n  }\n\n  private uiSourceCodeRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.removeUISourceCode(uiSourceCode);\n  }\n\n  private projectRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.Project>): void {\n    const project = event.data;\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      this.removeUISourceCode(uiSourceCode);\n    }\n  }\n\n  private removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const breakpoints = this.breakpointLocationsForUISourceCode(uiSourceCode);\n    breakpoints.forEach(bp => bp.breakpoint.removeUISourceCode(uiSourceCode));\n  }\n\n  async setBreakpoint(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number|undefined,\n      condition: string, enabled: boolean): Promise<Breakpoint> {\n    let uiLocation: Workspace.UISourceCode.UILocation =\n        new Workspace.UISourceCode.UILocation(uiSourceCode, lineNumber, columnNumber);\n    const normalizedLocation = await this.debuggerWorkspaceBinding.normalizeUILocation(uiLocation);\n    if (normalizedLocation.id() !== uiLocation.id()) {\n      Common.Revealer.reveal(normalizedLocation);\n      uiLocation = normalizedLocation;\n    }\n    return this.innerSetBreakpoint(\n        uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber, condition, enabled);\n  }\n\n  private innerSetBreakpoint(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number|undefined,\n      condition: string, enabled: boolean): Breakpoint {\n    const itemId = BreakpointManager.breakpointStorageId(uiSourceCode.url(), lineNumber, columnNumber);\n    let breakpoint = this.breakpointByStorageId.get(itemId);\n    if (breakpoint) {\n      breakpoint.updateState(condition, enabled);\n      breakpoint.addUISourceCode(uiSourceCode);\n      breakpoint.updateBreakpoint();\n      return breakpoint;\n    }\n    breakpoint = new Breakpoint(this, uiSourceCode, uiSourceCode.url(), lineNumber, columnNumber, condition, enabled);\n    this.breakpointByStorageId.set(itemId, breakpoint);\n    return breakpoint;\n  }\n\n  findBreakpoint(uiLocation: Workspace.UISourceCode.UILocation): BreakpointLocation|null {\n    const breakpoints = this.breakpointsForUISourceCode.get(uiLocation.uiSourceCode);\n    return breakpoints ? (breakpoints.get(uiLocation.id())) || null : null;\n  }\n\n  async possibleBreakpoints(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): Promise<Workspace.UISourceCode.UILocation[]> {\n    const {pluginManager} = this.debuggerWorkspaceBinding;\n    if (pluginManager) {\n      // TODO(bmeurer): Refactor this logic, as for DWARF and sourcemaps, it doesn't make sense\n      //                to even ask V8 for possible break locations, since these are determined\n      //                from the debugging information.\n      const rawLocations = await pluginManager.uiLocationToRawLocations(uiSourceCode, textRange.startLine);\n      if (rawLocations) {\n        const uiLocations = [];\n        for (const rawLocation of rawLocations) {\n          const uiLocation = await this.debuggerWorkspaceBinding.rawLocationToUILocation(rawLocation);\n          if (uiLocation) {\n            uiLocations.push(uiLocation);\n          }\n        }\n        return uiLocations;\n      }\n    }\n    const startLocationsPromise = DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(\n        uiSourceCode, textRange.startLine, textRange.startColumn);\n    const endLocationsPromise = DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(\n        uiSourceCode, textRange.endLine, textRange.endColumn);\n    const [startLocations, endLocations] = await Promise.all([startLocationsPromise, endLocationsPromise]);\n    const endLocationByModel = new Map<SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Location>();\n    for (const location of endLocations) {\n      endLocationByModel.set(location.debuggerModel, location);\n    }\n    let startLocation: SDK.DebuggerModel.Location|null = null;\n    let endLocation: SDK.DebuggerModel.Location|null = null;\n    for (const location of startLocations) {\n      const endLocationCandidate = endLocationByModel.get(location.debuggerModel);\n      if (endLocationCandidate) {\n        startLocation = location;\n        endLocation = endLocationCandidate;\n        break;\n      }\n    }\n    if (!startLocation || !endLocation) {\n      return [];\n    }\n\n    return startLocation.debuggerModel\n        .getPossibleBreakpoints(startLocation, endLocation, /* restrictToFunction */ false)\n        .then(toUILocations.bind(this));\n\n    async function toUILocations(this: BreakpointManager, locations: SDK.DebuggerModel.BreakLocation[]):\n        Promise<Workspace.UISourceCode.UILocation[]> {\n      const sortedLocationsPromises =\n          locations.map(location => this.debuggerWorkspaceBinding.rawLocationToUILocation(location));\n      const nullableLocations = await Promise.all(sortedLocationsPromises);\n      const sortedLocations =\n          (nullableLocations.filter(location => location && location.uiSourceCode === uiSourceCode) as\n           Workspace.UISourceCode.UILocation[]);\n      if (!sortedLocations.length) {\n        return [];\n      }\n      sortedLocations.sort(Workspace.UISourceCode.UILocation.comparator);\n      let lastLocation: Workspace.UISourceCode.UILocation = sortedLocations[0];\n      const result = [lastLocation];\n      for (const location of sortedLocations) {\n        if (location.id() !== lastLocation.id()) {\n          result.push(location);\n          lastLocation = location;\n        }\n      }\n      return result;\n    }\n  }\n\n  breakpointLocationsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): BreakpointLocation[] {\n    const breakpoints = this.breakpointsForUISourceCode.get(uiSourceCode);\n    return breakpoints ? Array.from(breakpoints.values()) : [];\n  }\n\n  allBreakpointLocations(): BreakpointLocation[] {\n    const result = [];\n    for (const breakpoints of this.breakpointsForUISourceCode.values()) {\n      result.push(...breakpoints.values());\n    }\n    return result;\n  }\n\n  removeBreakpoint(breakpoint: Breakpoint, removeFromStorage: boolean): void {\n    if (removeFromStorage) {\n      this.storage.removeBreakpoint(breakpoint);\n    }\n    this.breakpointByStorageId.delete(breakpoint.breakpointStorageId());\n  }\n\n  uiLocationAdded(breakpoint: Breakpoint, uiLocation: Workspace.UISourceCode.UILocation): void {\n    let breakpoints = this.breakpointsForUISourceCode.get(uiLocation.uiSourceCode);\n    if (!breakpoints) {\n      breakpoints = new Map();\n      this.breakpointsForUISourceCode.set(uiLocation.uiSourceCode, breakpoints);\n    }\n    const breakpointLocation = {breakpoint: breakpoint, uiLocation: uiLocation};\n    breakpoints.set(uiLocation.id(), breakpointLocation);\n    this.dispatchEventToListeners(Events.BreakpointAdded, breakpointLocation);\n  }\n\n  uiLocationRemoved(breakpoint: Breakpoint, uiLocation: Workspace.UISourceCode.UILocation): void {\n    const breakpoints = this.breakpointsForUISourceCode.get(uiLocation.uiSourceCode);\n    if (!breakpoints) {\n      return;\n    }\n    const breakpointLocation = breakpoints.get(uiLocation.id()) || null;\n    if (!breakpointLocation) {\n      return;\n    }\n    breakpoints.delete(uiLocation.id());\n    if (breakpoints.size === 0) {\n      this.breakpointsForUISourceCode.delete(uiLocation.uiSourceCode);\n    }\n    this.dispatchEventToListeners(Events.BreakpointRemoved, {breakpoint: breakpoint, uiLocation: uiLocation});\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  BreakpointAdded = 'breakpoint-added',\n  BreakpointRemoved = 'breakpoint-removed',\n}\n\nexport type EventTypes = {\n  [Events.BreakpointAdded]: BreakpointLocation,\n  [Events.BreakpointRemoved]: BreakpointLocation,\n};\n\nexport class Breakpoint implements SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  readonly breakpointManager: BreakpointManager;\n  urlInternal: string;\n  private readonly lineNumberInternal: number;\n  private readonly columnNumberInternal: number|undefined;\n  private readonly uiLocations: Set<Workspace.UISourceCode.UILocation>;\n  uiSourceCodes: Set<Workspace.UISourceCode.UISourceCode>;\n  private conditionInternal!: string;\n  private enabledInternal!: boolean;\n  isRemoved!: boolean;\n  currentState: Breakpoint.State|null;\n  private readonly modelBreakpoints: Map<SDK.DebuggerModel.DebuggerModel, ModelBreakpoint>;\n\n  constructor(\n      breakpointManager: BreakpointManager, primaryUISourceCode: Workspace.UISourceCode.UISourceCode, url: string,\n      lineNumber: number, columnNumber: number|undefined, condition: string, enabled: boolean) {\n    this.breakpointManager = breakpointManager;\n    this.urlInternal = url;\n    this.lineNumberInternal = lineNumber;\n    this.columnNumberInternal = columnNumber;\n\n    this.uiLocations = new Set();    // Bound locations\n    this.uiSourceCodes = new Set();  // All known UISourceCodes with this url\n\n    this.currentState = null;\n\n    this.modelBreakpoints = new Map();\n    this.updateState(condition, enabled);\n    this.addUISourceCode(primaryUISourceCode);\n    this.breakpointManager.targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n  }\n\n  async refreshInDebugger(): Promise<void> {\n    if (!this.isRemoved) {\n      const breakpoints = Array.from(this.modelBreakpoints.values());\n      await Promise.all(breakpoints.map(breakpoint => breakpoint.refreshBreakpoint()));\n    }\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    const debuggerWorkspaceBinding = this.breakpointManager.debuggerWorkspaceBinding;\n    this.modelBreakpoints.set(debuggerModel, new ModelBreakpoint(debuggerModel, this, debuggerWorkspaceBinding));\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    const modelBreakpoint = this.modelBreakpoints.get(debuggerModel);\n    this.modelBreakpoints.delete(debuggerModel);\n\n    if (!modelBreakpoint) {\n      return;\n    }\n    modelBreakpoint.cleanUpAfterDebuggerIsGone();\n    modelBreakpoint.removeEventListeners();\n  }\n\n  addUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    if (!this.uiSourceCodes.has(uiSourceCode)) {\n      this.uiSourceCodes.add(uiSourceCode);\n      if (!this.bound()) {\n        this.breakpointManager.uiLocationAdded(this, this.defaultUILocation(uiSourceCode));\n      }\n    }\n  }\n\n  clearUISourceCodes(): void {\n    if (!this.bound()) {\n      this.removeAllUnboundLocations();\n    }\n    this.uiSourceCodes.clear();\n  }\n\n  removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    if (this.uiSourceCodes.has(uiSourceCode)) {\n      this.uiSourceCodes.delete(uiSourceCode);\n      if (!this.bound()) {\n        this.breakpointManager.uiLocationRemoved(this, this.defaultUILocation(uiSourceCode));\n      }\n    }\n\n    // Do we need to do this? Not sure if bound locations will leak...\n    if (this.bound()) {\n      for (const uiLocation of this.uiLocations) {\n        if (uiLocation.uiSourceCode === uiSourceCode) {\n          this.uiLocations.delete(uiLocation);\n          this.breakpointManager.uiLocationRemoved(this, uiLocation);\n        }\n      }\n\n      if (!this.bound() && !this.isRemoved) {\n        // Switch to unbound locations\n        this.addAllUnboundLocations();\n      }\n    }\n  }\n\n  url(): string {\n    return this.urlInternal;\n  }\n\n  lineNumber(): number {\n    return this.lineNumberInternal;\n  }\n\n  columnNumber(): number|undefined {\n    return this.columnNumberInternal;\n  }\n\n  uiLocationAdded(uiLocation: Workspace.UISourceCode.UILocation): void {\n    if (this.isRemoved) {\n      return;\n    }\n    if (!this.bound()) {\n      // This is our first bound location; remove all unbound locations\n      this.removeAllUnboundLocations();\n    }\n    this.uiLocations.add(uiLocation);\n    this.breakpointManager.uiLocationAdded(this, uiLocation);\n  }\n\n  uiLocationRemoved(uiLocation: Workspace.UISourceCode.UILocation): void {\n    if (this.uiLocations.has(uiLocation)) {\n      this.uiLocations.delete(uiLocation);\n      this.breakpointManager.uiLocationRemoved(this, uiLocation);\n      if (!this.bound() && !this.isRemoved) {\n        this.addAllUnboundLocations();\n      }\n    }\n  }\n\n  enabled(): boolean {\n    return this.enabledInternal;\n  }\n\n  bound(): boolean {\n    return this.uiLocations.size !== 0;\n  }\n\n  hasBoundScript(): boolean {\n    for (const uiSourceCode of this.uiSourceCodes) {\n      if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Network) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.updateState(this.conditionInternal, enabled);\n  }\n\n  condition(): string {\n    return this.conditionInternal;\n  }\n\n  setCondition(condition: string): void {\n    this.updateState(condition, this.enabledInternal);\n  }\n\n  updateState(condition: string, enabled: boolean): void {\n    if (this.enabledInternal === enabled && this.conditionInternal === condition) {\n      return;\n    }\n    this.enabledInternal = enabled;\n    this.conditionInternal = condition;\n    this.breakpointManager.storage.updateBreakpoint(this);\n    this.updateBreakpoint();\n  }\n\n  updateBreakpoint(): void {\n    if (!this.bound()) {\n      this.removeAllUnboundLocations();\n      if (!this.isRemoved) {\n        this.addAllUnboundLocations();\n      }\n    }\n    for (const modelBreakpoint of this.modelBreakpoints.values()) {\n      modelBreakpoint.scheduleUpdateInDebugger();\n    }\n  }\n\n  remove(keepInStorage: boolean): void {\n    this.isRemoved = true;\n    const removeFromStorage = !keepInStorage;\n    for (const modelBreakpoint of this.modelBreakpoints.values()) {\n      modelBreakpoint.scheduleUpdateInDebugger();\n      modelBreakpoint.removeEventListeners();\n    }\n\n    this.breakpointManager.removeBreakpoint(this, removeFromStorage);\n    this.breakpointManager.targetManager.unobserveModels(SDK.DebuggerModel.DebuggerModel, this);\n    this.clearUISourceCodes();\n  }\n\n  breakpointStorageId(): string {\n    return BreakpointManager.breakpointStorageId(this.urlInternal, this.lineNumberInternal, this.columnNumberInternal);\n  }\n\n  private resetLocations(): void {\n    this.clearUISourceCodes();\n    for (const modelBreakpoint of this.modelBreakpoints.values()) {\n      modelBreakpoint.resetLocations();\n    }\n  }\n\n  private defaultUILocation(uiSourceCode: Workspace.UISourceCode.UISourceCode): Workspace.UISourceCode.UILocation {\n    return uiSourceCode.uiLocation(this.lineNumberInternal, this.columnNumberInternal);\n  }\n\n  private removeAllUnboundLocations(): void {\n    for (const uiSourceCode of this.uiSourceCodes) {\n      this.breakpointManager.uiLocationRemoved(this, this.defaultUILocation(uiSourceCode));\n    }\n  }\n\n  private addAllUnboundLocations(): void {\n    for (const uiSourceCode of this.uiSourceCodes) {\n      this.breakpointManager.uiLocationAdded(this, this.defaultUILocation(uiSourceCode));\n    }\n  }\n\n  getUiSourceCodes(): Set<Workspace.UISourceCode.UISourceCode> {\n    return this.uiSourceCodes;\n  }\n\n  getIsRemoved(): boolean {\n    return this.isRemoved;\n  }\n}\n\nexport class ModelBreakpoint {\n  private debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  private breakpoint: Breakpoint;\n  private readonly debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  private readonly liveLocations: LiveLocationPool;\n  private readonly uiLocations: Map<LiveLocation, Workspace.UISourceCode.UILocation>;\n  private hasPendingUpdate: boolean;\n  private isUpdating: boolean;\n  private cancelCallback: boolean;\n  private currentState: Breakpoint.State|null;\n  private breakpointIds: Protocol.Debugger.BreakpointId[];\n\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, breakpoint: Breakpoint,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.debuggerModel = debuggerModel;\n    this.breakpoint = breakpoint;\n    this.debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.liveLocations = new LiveLocationPool();\n\n    this.uiLocations = new Map();\n    this.debuggerModel.addEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasDisabled, this.cleanUpAfterDebuggerIsGone, this);\n    this.debuggerModel.addEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasEnabled, this.scheduleUpdateInDebugger, this);\n    this.hasPendingUpdate = false;\n    this.isUpdating = false;\n    this.cancelCallback = false;\n    this.currentState = null;\n    this.breakpointIds = [];\n    if (this.debuggerModel.debuggerEnabled()) {\n      this.scheduleUpdateInDebugger();\n    }\n  }\n\n  resetLocations(): void {\n    for (const uiLocation of this.uiLocations.values()) {\n      this.breakpoint.uiLocationRemoved(uiLocation);\n    }\n\n    this.uiLocations.clear();\n    this.liveLocations.disposeAll();\n  }\n\n  scheduleUpdateInDebugger(): void {\n    if (this.isUpdating) {\n      this.hasPendingUpdate = true;\n      return;\n    }\n\n    this.isUpdating = true;\n    this.updateInDebugger().then(() => {\n      this.isUpdating = false;\n      if (this.hasPendingUpdate) {\n        this.hasPendingUpdate = false;\n        this.scheduleUpdateInDebugger();\n      }\n    });\n  }\n\n  private scriptDiverged(): boolean {\n    for (const uiSourceCode of this.breakpoint.getUiSourceCodes()) {\n      const scriptFile = this.debuggerWorkspaceBinding.scriptFile(uiSourceCode, this.debuggerModel);\n      if (scriptFile && scriptFile.hasDivergedFromVM()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private async updateInDebugger(): Promise<void> {\n    if (this.debuggerModel.target().isDisposed()) {\n      this.cleanUpAfterDebuggerIsGone();\n      return;\n    }\n\n    const lineNumber = this.breakpoint.lineNumber();\n    const columnNumber = this.breakpoint.columnNumber();\n    const condition = this.breakpoint.condition();\n\n    let newState: Breakpoint.State|null = null;\n    if (!this.breakpoint.getIsRemoved() && this.breakpoint.enabled() && !this.scriptDiverged()) {\n      let debuggerLocations: SDK.DebuggerModel.Location[] = [];\n      for (const uiSourceCode of this.breakpoint.getUiSourceCodes()) {\n        const locations =\n            await DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n        debuggerLocations = locations.filter(location => location.debuggerModel === this.debuggerModel);\n        if (debuggerLocations.length) {\n          break;\n        }\n      }\n      if (debuggerLocations.length && debuggerLocations.every(loc => loc.script())) {\n        const positions = debuggerLocations.map(loc => {\n          const script = loc.script() as SDK.Script.Script;\n          return {\n            url: script.sourceURL,\n            scriptId: script.scriptId,\n            scriptHash: script.hash,\n            lineNumber: loc.lineNumber,\n            columnNumber: loc.columnNumber,\n          };\n        });\n        newState = new Breakpoint.State(positions, condition);\n      } else if (this.breakpoint.currentState) {\n        newState = new Breakpoint.State(this.breakpoint.currentState.positions, condition);\n      } else {\n        // TODO(bmeurer): This fallback doesn't make a whole lot of sense, we should\n        // at least signal a warning to the developer that this breakpoint wasn't\n        // really resolved.\n        const position = {\n          url: this.breakpoint.url(),\n          scriptId: '' as Protocol.Runtime.ScriptId,\n          scriptHash: '',\n          lineNumber,\n          columnNumber,\n        };\n        newState = new Breakpoint.State([position], condition);\n      }\n    }\n\n    if (this.breakpointIds.length && Breakpoint.State.equals(newState, this.currentState)) {\n      return;\n    }\n    this.breakpoint.currentState = newState;\n\n    if (this.breakpointIds.length) {\n      await this.refreshBreakpoint();\n      return;\n    }\n\n    if (!newState) {\n      return;\n    }\n\n    const results = await Promise.all(newState.positions.map(pos => {\n      if (pos.url) {\n        return this.debuggerModel.setBreakpointByURL(pos.url, pos.lineNumber, pos.columnNumber, condition);\n      }\n      return this.debuggerModel.setBreakpointInAnonymousScript(\n          pos.scriptId, pos.scriptHash as string, pos.lineNumber, pos.columnNumber, condition);\n    }));\n    const breakpointIds: Protocol.Debugger.BreakpointId[] = [];\n    let locations: SDK.DebuggerModel.Location[] = [];\n    let maybeRescheduleUpdate = false;\n    for (const result of results) {\n      if (result.breakpointId) {\n        breakpointIds.push(result.breakpointId);\n        locations = locations.concat(result.locations);\n      } else if (this.debuggerModel.debuggerEnabled() && !this.debuggerModel.isReadyToPause()) {\n        maybeRescheduleUpdate = true;\n      }\n    }\n\n    if (!breakpointIds.length && maybeRescheduleUpdate) {\n      // TODO(crbug.com/1229541): This is a quickfix to prevent breakpoints from\n      // disappearing if the Debugger is actually not enabled\n      // yet. This quickfix should be removed as soon as we have a solution\n      // to correctly synchronize the front-end with the inspector back-end.\n      this.scheduleUpdateInDebugger();\n      return;\n    }\n\n    this.currentState = newState;\n    if (this.cancelCallback) {\n      this.cancelCallback = false;\n      return;\n    }\n\n    if (!breakpointIds.length) {\n      this.breakpoint.remove(true);\n      return;\n    }\n\n    this.breakpointIds = breakpointIds;\n    this.breakpointIds.forEach(\n        breakpointId => this.debuggerModel.addBreakpointListener(breakpointId, this.breakpointResolved, this));\n    await Promise.all(locations.map(location => this.addResolvedLocation(location)));\n  }\n\n  async refreshBreakpoint(): Promise<void> {\n    if (!this.breakpointIds.length) {\n      return;\n    }\n    this.resetLocations();\n    await Promise.all(this.breakpointIds.map(id => this.debuggerModel.removeBreakpoint(id)));\n    this.didRemoveFromDebugger();\n    this.currentState = null;\n    this.scheduleUpdateInDebugger();\n  }\n\n  private didRemoveFromDebugger(): void {\n    if (this.cancelCallback) {\n      this.cancelCallback = false;\n      return;\n    }\n\n    this.resetLocations();\n    this.breakpointIds.forEach(\n        breakpointId => this.debuggerModel.removeBreakpointListener(breakpointId, this.breakpointResolved, this));\n    this.breakpointIds = [];\n  }\n\n  private async breakpointResolved(event: Common.EventTarget.EventTargetEvent): Promise<void> {\n    await this.addResolvedLocation((event.data as SDK.DebuggerModel.Location));\n  }\n\n  private async locationUpdated(liveLocation: LiveLocation): Promise<void> {\n    const oldUILocation = this.uiLocations.get(liveLocation);\n    const uiLocation = await liveLocation.uiLocation();\n\n    if (oldUILocation) {\n      this.breakpoint.uiLocationRemoved(oldUILocation);\n    }\n\n    if (uiLocation) {\n      this.uiLocations.set(liveLocation, uiLocation);\n      this.breakpoint.uiLocationAdded(uiLocation);\n    } else {\n      this.uiLocations.delete(liveLocation);\n    }\n  }\n\n  private async addResolvedLocation(location: SDK.DebuggerModel.Location): Promise<void> {\n    const uiLocation = await this.debuggerWorkspaceBinding.rawLocationToUILocation(location);\n    if (!uiLocation) {\n      return;\n    }\n    const breakpointLocation = this.breakpoint.breakpointManager.findBreakpoint(uiLocation);\n    if (breakpointLocation && breakpointLocation.breakpoint !== this.breakpoint) {\n      // location clash\n      this.breakpoint.remove(false /* keepInStorage */);\n      return;\n    }\n    await this.debuggerWorkspaceBinding.createLiveLocation(\n        location, this.locationUpdated.bind(this), this.liveLocations);\n  }\n\n  cleanUpAfterDebuggerIsGone(): void {\n    if (this.isUpdating) {\n      this.cancelCallback = true;\n    }\n\n    this.resetLocations();\n    this.currentState = null;\n    if (this.breakpointIds.length) {\n      this.didRemoveFromDebugger();\n    }\n  }\n\n  removeEventListeners(): void {\n    this.debuggerModel.removeEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasDisabled, this.cleanUpAfterDebuggerIsGone, this);\n    this.debuggerModel.removeEventListener(\n        SDK.DebuggerModel.Events.DebuggerWasEnabled, this.scheduleUpdateInDebugger, this);\n  }\n}\n\ninterface Position {\n  url: string;\n  scriptId: Protocol.Runtime.ScriptId;\n  scriptHash: string;\n  lineNumber: number;\n  columnNumber?: number;\n}\n\nexport namespace Breakpoint {\n  export class State {\n    positions: Position[];\n    condition: string;\n\n    constructor(positions: Position[], condition: string) {\n      this.positions = positions;\n      this.condition = condition;\n    }\n\n    static equals(stateA?: State|null, stateB?: State|null): boolean {\n      if (!stateA || !stateB) {\n        return false;\n      }\n      if (stateA.condition !== stateB.condition) {\n        return false;\n      }\n      if (stateA.positions.length !== stateB.positions.length) {\n        return false;\n      }\n      for (let i = 0; i < stateA.positions.length; i++) {\n        const positionA = stateA.positions[i];\n        const positionB = stateB.positions[i];\n        if (positionA.url !== positionB.url) {\n          return false;\n        }\n        if (positionA.scriptId !== positionB.scriptId) {\n          return false;\n        }\n        if (positionA.scriptHash !== positionB.scriptHash) {\n          return false;\n        }\n        if (positionA.lineNumber !== positionB.lineNumber) {\n          return false;\n        }\n        if (positionA.columnNumber !== positionB.columnNumber) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n}\n\nclass Storage {\n  private readonly setting: Common.Settings.Setting<Storage.Item[]>;\n  private readonly breakpoints: Map<string, Storage.Item>;\n  private muted!: boolean|undefined;\n\n  constructor() {\n    this.setting = Common.Settings.Settings.instance().createLocalSetting('breakpoints', []);\n    this.breakpoints = new Map();\n    const items = (this.setting.get() as Storage.Item[]);\n    for (const item of items) {\n      this.breakpoints.set(BreakpointManager.breakpointStorageId(item.url, item.lineNumber, item.columnNumber), item);\n    }\n  }\n\n  mute(): void {\n    this.muted = true;\n  }\n\n  unmute(): void {\n    delete this.muted;\n  }\n\n  breakpointItems(url: string): Storage.Item[] {\n    return Array.from(this.breakpoints.values()).filter(item => item.url === url);\n  }\n\n  updateBreakpoint(breakpoint: Breakpoint): void {\n    if (this.muted || !breakpoint.breakpointStorageId()) {\n      return;\n    }\n    this.breakpoints.set(breakpoint.breakpointStorageId(), new Storage.Item(breakpoint));\n    this.save();\n  }\n\n  removeBreakpoint(breakpoint: Breakpoint): void {\n    if (!this.muted) {\n      this.breakpoints.delete(breakpoint.breakpointStorageId());\n      this.save();\n    }\n  }\n\n  private save(): void {\n    this.setting.set(Array.from(this.breakpoints.values()));\n  }\n}\n\nnamespace Storage {\n  export class Item {\n    url: string;\n    lineNumber: number;\n    columnNumber?: number;\n    condition: string;\n    enabled: boolean;\n\n    constructor(breakpoint: Breakpoint) {\n      this.url = breakpoint.url();\n      this.lineNumber = breakpoint.lineNumber();\n      this.columnNumber = breakpoint.columnNumber();\n      this.condition = breakpoint.condition();\n      this.enabled = breakpoint.enabled();\n    }\n  }\n}\n\nexport interface BreakpointLocation {\n  breakpoint: Breakpoint;\n  uiLocation: Workspace.UISourceCode.UILocation;\n}\n"]}