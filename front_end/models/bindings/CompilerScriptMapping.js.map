{"version":3,"file":"CompilerScriptMapping.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/CompilerScriptMapping.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {DebuggerSourceMapping, DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {IgnoreListManager} from './IgnoreListManager.js';\nimport {NetworkProject} from './NetworkProject.js';\n\nexport class CompilerScriptMapping implements DebuggerSourceMapping {\n  private readonly debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  private readonly sourceMapManager: SDK.SourceMapManager.SourceMapManager<SDK.Script.Script>;\n  private readonly workspace: Workspace.Workspace.WorkspaceImpl;\n  private readonly debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  private readonly regularProject: ContentProviderBasedProject;\n  private readonly contentScriptsProject: ContentProviderBasedProject;\n  private readonly regularBindings: Map<string, Binding>;\n  private readonly contentScriptsBindings: Map<string, Binding>;\n  private readonly stubUISourceCodes: Map<SDK.Script.Script, Workspace.UISourceCode.UISourceCode>;\n  private readonly stubProject: ContentProviderBasedProject;\n  private readonly eventListeners: Common.EventTarget.EventDescriptor[];\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.debuggerModel = debuggerModel;\n    this.sourceMapManager = this.debuggerModel.sourceMapManager();\n    this.workspace = workspace;\n    this.debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    const target = debuggerModel.target();\n    this.regularProject = new ContentProviderBasedProject(\n        workspace, 'jsSourceMaps::' + target.id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    this.contentScriptsProject = new ContentProviderBasedProject(\n        workspace, 'jsSourceMaps:extensions:' + target.id(), Workspace.Workspace.projectTypes.ContentScripts, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.regularProject, target);\n    NetworkProject.setTargetForProject(this.contentScriptsProject, target);\n\n    this.regularBindings = new Map();\n    this.contentScriptsBindings = new Map();\n\n    this.stubUISourceCodes = new Map();\n\n    this.stubProject = new ContentProviderBasedProject(\n        workspace, 'jsSourceMaps:stub:' + target.id(), Workspace.Workspace.projectTypes.Service, '',\n        true /* isServiceProject */);\n    this.eventListeners = [\n      this.sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapWillAttach, this.sourceMapWillAttach, this),\n      this.sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapFailedToAttach, this.sourceMapFailedToAttach, this),\n      this.sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this),\n      this.sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapDetached, this.sourceMapDetached, this),\n      this.workspace.addEventListener(\n          Workspace.Workspace.Events.UISourceCodeAdded,\n          event => {\n            this.onUiSourceCodeAdded(event);\n          },\n          this),\n    ];\n  }\n\n  private onUiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    if (uiSourceCode.contentType().isDocument()) {\n      for (const script of this.debuggerModel.scriptsForSourceURL(uiSourceCode.url())) {\n        this.debuggerWorkspaceBinding.updateLocations(script);\n      }\n    }\n  }\n\n  private addStubUISourceCode(script: SDK.Script.Script): void {\n    const stubUISourceCode = this.stubProject.addContentProvider(\n        script.sourceURL + ':sourcemap',\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            script.sourceURL, Common.ResourceType.resourceTypes.Script,\n            '\\n\\n\\n\\n\\n// Please wait a bit.\\n// Compiled script is not shown while source map is being loaded!'),\n        'text/javascript');\n    this.stubUISourceCodes.set(script, stubUISourceCode);\n  }\n\n  private async removeStubUISourceCode(script: SDK.Script.Script): Promise<void> {\n    const uiSourceCode = this.stubUISourceCodes.get(script);\n    this.stubUISourceCodes.delete(script);\n    if (uiSourceCode) {\n      this.stubProject.removeFile(uiSourceCode.url());\n    }\n    await this.debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  static uiSourceCodeOrigin(uiSourceCode: Workspace.UISourceCode.UISourceCode): string[] {\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (binding) {\n      return binding.getReferringSourceMaps().map((sourceMap: SDK.SourceMap.SourceMap) => sourceMap.compiledURL());\n    }\n    return [];\n  }\n\n  mapsToSourceCode(rawLocation: SDK.DebuggerModel.Location): boolean {\n    const script = rawLocation.script();\n    const sourceMap = script ? this.sourceMapManager.sourceMapForClient(script) : null;\n    if (!sourceMap) {\n      return true;\n    }\n    const entry = sourceMap.findEntry(rawLocation.lineNumber, rawLocation.columnNumber);\n    return entry !== null && entry.lineNumber === rawLocation.lineNumber &&\n        entry.columnNumber === rawLocation.columnNumber;\n  }\n\n  uiSourceCodeForURL(url: string, isContentScript: boolean): Workspace.UISourceCode.UISourceCode|null {\n    return isContentScript ? this.contentScriptsProject.uiSourceCodeForURL(url) :\n                             this.regularProject.uiSourceCodeForURL(url);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n\n    const lineNumber = rawLocation.lineNumber - script.lineOffset;\n    let columnNumber = rawLocation.columnNumber;\n    if (!lineNumber) {\n      columnNumber -= script.columnOffset;\n    }\n\n    const stubUISourceCode = this.stubUISourceCodes.get(script);\n    if (stubUISourceCode) {\n      return new Workspace.UISourceCode.UILocation(stubUISourceCode, lineNumber, columnNumber);\n    }\n\n    const sourceMap = this.sourceMapManager.sourceMapForClient(script);\n    if (!sourceMap) {\n      return null;\n    }\n    const entry = sourceMap.findEntry(lineNumber, columnNumber);\n    if (!entry || !entry.sourceURL) {\n      return null;\n    }\n    const uiSourceCode = script.isContentScript() ? this.contentScriptsProject.uiSourceCodeForURL(entry.sourceURL) :\n                                                    this.regularProject.uiSourceCodeForURL(entry.sourceURL);\n    if (!uiSourceCode) {\n      return null;\n    }\n    return uiSourceCode.uiLocation((entry.sourceLineNumber as number), (entry.sourceColumnNumber as number));\n  }\n\n  uiLocationToRawLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (!binding) {\n      return [];\n    }\n\n    const locations: SDK.DebuggerModel.Location[] = [];\n    for (const sourceMap of binding.getReferringSourceMaps()) {\n      const entry = sourceMap.sourceLineMapping(uiSourceCode.url(), lineNumber, columnNumber);\n      if (!entry) {\n        continue;\n      }\n      for (const script of this.sourceMapManager.clientsForSourceMap(sourceMap)) {\n        locations.push(this.debuggerModel.createRawLocation(\n            script, entry.lineNumber + script.lineOffset,\n            !entry.lineNumber ? entry.columnNumber + script.columnOffset : entry.columnNumber));\n      }\n    }\n    return locations;\n  }\n\n  private async sourceMapWillAttach(event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script}>):\n      Promise<void> {\n    const script = event.data.client;\n    // Create stub UISourceCode for the time source mapping is being loaded.\n    this.addStubUISourceCode(script);\n    await this.debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  private async sourceMapFailedToAttach(event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script}>):\n      Promise<void> {\n    const script = event.data.client;\n    await this.removeStubUISourceCode(script);\n  }\n\n  private async sourceMapAttached(\n      event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap}>):\n      Promise<void> {\n    const script = event.data.client;\n    const sourceMap = event.data.sourceMap;\n    await this.removeStubUISourceCode(script);\n\n    if (IgnoreListManager.instance().isIgnoreListedURL(script.sourceURL, script.isContentScript())) {\n      this.sourceMapAttachedForTest(sourceMap);\n      return;\n    }\n\n    await this.populateSourceMapSources(script, sourceMap);\n    this.sourceMapAttachedForTest(sourceMap);\n  }\n\n  private async sourceMapDetached(\n      event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap}>):\n      Promise<void> {\n    const script = event.data.client;\n    const sourceMap = event.data.sourceMap;\n    const bindings = script.isContentScript() ? this.contentScriptsBindings : this.regularBindings;\n    for (const sourceURL of sourceMap.sourceURLs()) {\n      const binding = bindings.get(sourceURL);\n      if (binding) {\n        binding.removeSourceMap(sourceMap, script.frameId);\n        if (!binding.getUiSourceCode()) {\n          bindings.delete(sourceURL);\n        }\n      }\n    }\n    await this.debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  sourceMapForScript(script: SDK.Script.Script): SDK.SourceMap.SourceMap|null {\n    return this.sourceMapManager.sourceMapForClient(script);\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (!binding) {\n      return [];\n    }\n\n    const scripts: SDK.Script.Script[] = [];\n    for (const sourceMap of binding.getReferringSourceMaps()) {\n      this.sourceMapManager.clientsForSourceMap(sourceMap).forEach(script => scripts.push(script));\n    }\n    return scripts;\n  }\n\n  private sourceMapAttachedForTest(_sourceMap: SDK.SourceMap.SourceMap|null): void {\n  }\n\n  private async populateSourceMapSources(script: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap): Promise<void> {\n    const project = script.isContentScript() ? this.contentScriptsProject : this.regularProject;\n    const bindings = script.isContentScript() ? this.contentScriptsBindings : this.regularBindings;\n    for (const sourceURL of sourceMap.sourceURLs()) {\n      let binding = bindings.get(sourceURL);\n      if (!binding) {\n        binding = new Binding(project, sourceURL);\n        bindings.set(sourceURL, binding);\n      }\n      binding.addSourceMap(sourceMap, script.frameId);\n    }\n    await this.debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  static uiLineHasMapping(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number): boolean {\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (!binding) {\n      return true;\n    }\n    for (const sourceMap of binding.getReferringSourceMaps()) {\n      if (sourceMap.sourceLineMapping(uiSourceCode.url(), lineNumber, 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n    this.regularProject.dispose();\n    this.contentScriptsProject.dispose();\n    this.stubProject.dispose();\n  }\n}\n\nconst uiSourceCodeToBinding = new WeakMap<Workspace.UISourceCode.UISourceCode, Binding>();\n\nclass Binding {\n  private readonly project: ContentProviderBasedProject;\n  private readonly url: string;\n  referringSourceMaps: SDK.SourceMap.SourceMap[];\n  private readonly activeSourceMap?: SDK.SourceMap.SourceMap|null;\n  uiSourceCode: Workspace.UISourceCode.UISourceCode|null;\n\n  constructor(project: ContentProviderBasedProject, url: string) {\n    this.project = project;\n    this.url = url;\n\n    this.referringSourceMaps = [];\n    this.uiSourceCode = null;\n  }\n\n  private recreateUISourceCodeIfNeeded(frameId: Protocol.Page.FrameId): void {\n    const sourceMap = this.referringSourceMaps[this.referringSourceMaps.length - 1];\n\n    const newUISourceCode =\n        this.project.createUISourceCode(this.url, Common.ResourceType.resourceTypes.SourceMapScript);\n    uiSourceCodeToBinding.set(newUISourceCode, this);\n    const contentProvider =\n        sourceMap.sourceContentProvider(this.url, Common.ResourceType.resourceTypes.SourceMapScript);\n    const mimeType = Common.ResourceType.ResourceType.mimeFromURL(this.url) || 'text/javascript';\n    const embeddedContent = sourceMap.embeddedContentByURL(this.url);\n    const metadata = typeof embeddedContent === 'string' ?\n        new Workspace.UISourceCode.UISourceCodeMetadata(null, embeddedContent.length) :\n        null;\n\n    if (this.uiSourceCode) {\n      NetworkProject.cloneInitialFrameAttribution(this.uiSourceCode, newUISourceCode);\n      this.project.removeFile(this.uiSourceCode.url());\n    } else {\n      NetworkProject.setInitialFrameAttribution(newUISourceCode, frameId);\n    }\n    this.uiSourceCode = newUISourceCode;\n    this.project.addUISourceCodeWithProvider(this.uiSourceCode, contentProvider, metadata, mimeType);\n  }\n\n  addSourceMap(sourceMap: SDK.SourceMap.SourceMap, frameId: Protocol.Page.FrameId): void {\n    if (this.uiSourceCode) {\n      NetworkProject.addFrameAttribution(this.uiSourceCode, frameId);\n    }\n    this.referringSourceMaps.push(sourceMap);\n    this.recreateUISourceCodeIfNeeded(frameId);\n  }\n\n  removeSourceMap(sourceMap: SDK.SourceMap.SourceMap, frameId: Protocol.Page.FrameId): void {\n    const uiSourceCode = (this.uiSourceCode as Workspace.UISourceCode.UISourceCode);\n    NetworkProject.removeFrameAttribution(uiSourceCode, frameId);\n    const lastIndex = this.referringSourceMaps.lastIndexOf(sourceMap);\n    if (lastIndex !== -1) {\n      this.referringSourceMaps.splice(lastIndex, 1);\n    }\n    if (!this.referringSourceMaps.length) {\n      this.project.removeFile(uiSourceCode.url());\n      this.uiSourceCode = null;\n    } else {\n      this.recreateUISourceCodeIfNeeded(frameId);\n    }\n  }\n\n  getReferringSourceMaps(): Array<SDK.SourceMap.SourceMap> {\n    return this.referringSourceMaps;\n  }\n\n  getUiSourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    return this.uiSourceCode;\n  }\n}\n"]}